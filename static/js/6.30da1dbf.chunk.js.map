{"version":3,"sources":["commponents/Common/UpButton/UpButton.tsx","commponents/Common/UpButton/UpButton.module.css","../node_modules/@mui/icons-material/KeyboardArrowUp.js","pages/School/schoolPages/pages/style.js","pages/School/schoolPages/pages/pageHTML/PageHTML1.jsx"],"names":["UpButton","useState","buttonState","setButtonState","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","innerWidth","className","styles","wrapper","button","show","onClick","scrollTo","top","left","behavior","module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","usePageStyles","makeStyles","theme","container","padding","backgroundColor","palette","background","paper","boxShadow","color","text","school","borderRadius","fontFamily","fontSize","fontWeight","margin","textAlign","blockCode","primary","borderLeft","whiteSpace","counterReset","listStyle","counterIncrement","content","ol","display","marginRight","width","height","borderRight","tegMaim","tegMain","tegSupport","blockTask","minHeight","border","marginTop","footer","borderTop","justifyContent","lineHeight","footerArrow","paddingTop","cursor","blockResaltCode","PageHTML1","classes","to","React","memo"],"mappings":"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","file":"static/js/6.30da1dbf.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\r\nimport styles from './UpButton.module.css';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nexport const UpButton: FC = () => {\r\n    const [buttonState, setButtonState] = useState(false)\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > 300) {\r\n            setButtonState(true)\r\n        } else {\r\n            setButtonState(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }\r\n    return <>\r\n        {window.innerWidth > 600 && <div className={styles.wrapper}>\r\n            {buttonState && <span className={`${styles.button} ${styles.show}`} onClick={handleClick}><KeyboardArrowUpIcon /></span>}\r\n        </div>}\r\n    </>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpButton_wrapper__2r6_3\",\"button\":\"UpButton_button__1Siua\",\"show\":\"UpButton_show__2E_YL\",\"hide\":\"UpButton_hide__2NrsI\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const usePageStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"5px 15px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.palette.boxShadow,\r\n    color: theme.palette.text.school,\r\n    borderRadius: \"10px\",\r\n\r\n    \"& > h1\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontSize: \"40px\",\r\n      fontWeight: \"normal\",\r\n      margin: \"15px 0px 10px 0px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > h4\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontWeight: \"normal\",\r\n      margin: \"0px\",\r\n    },\r\n    \"& > p\": {\r\n      textAlign: \"justify\",\r\n      fontSize: \"17px\",\r\n      margin: \"0px 0px 10px 0px\",\r\n    },\r\n  },\r\n\r\n  blockCode: {\r\n    color: theme.palette.text.primary,\r\n    background: theme.palette.background.blockCode,\r\n    padding: \"1px 0px\",\r\n    borderLeft: theme.palette.borderLeft,\r\n    margin: \"5px 0px\",\r\n    whiteSpace: \"pre\",\r\n    \r\n\r\n    \"& > ol\": {\r\n      counterReset: \"myCounter\",\r\n      padding: \"0px\",\r\n      margin: \"5px 0px\",\r\n\r\n      \"& > li\": {\r\n        listStyle: \"none\",\r\n        \"&:before\": {\r\n          counterIncrement: \"myCounter\",\r\n          content: \"counter(myCounter)\",\r\n          color: theme.palette.text.ol,\r\n          fontFamily: \"Times New Roman\",\r\n          display: \"inline-block\",\r\n          textAlign: \"center\",\r\n          marginRight: \"10px\",\r\n          width: \"30px\",\r\n          height: \"20px\",\r\n          borderRight: theme.palette.borderRight,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  tegMaim: {\r\n    color: theme.palette.text.tegMain,\r\n  },\r\n  tegSupport: {\r\n    color: theme.palette.text.tegSupport,\r\n  },\r\n\r\n  blockTask: {\r\n    minHeight: \"150px\",\r\n    border: theme.palette.borderRight,\r\n    marginTop: \"15px\",\r\n    padding: \"20px\",\r\n\r\n    \"& > h1\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontSize: \"40px\",\r\n      fontWeight: \"normal\",\r\n      margin: \"0px 0px 10px 0px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > p\": {\r\n      textAlign: \"justify\",\r\n      fontSize: \"17px\",\r\n      margin: \"0px 0px 10px 0px\",\r\n    },\r\n  },\r\n  footer: {\r\n    height: \"50px\",\r\n    width: \"100%\",\r\n    borderTop: theme.palette.borderRight,\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n\r\n    fontSize: \"70px\",\r\n    lineHeight: \"0px\",\r\n    \"& > a\": {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  footerArrow: {\r\n    paddingTop: \"20px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#FFD93D\",\r\n    },\r\n  },\r\n  blockResaltCode: {\r\n    padding: \"20px\",\r\n    // boxShadow: \"0 0 7px #ddd\",\r\n\r\n    \"& * td\": {\r\n      width: \"200px\",\r\n      height: \"100px\",\r\n    },\r\n  },\r\n}));\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { UpButton } from \"../../../../../commponents/Common/UpButton/UpButton\";\r\nimport { usePageStyles } from \"../style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageHTML1 = () => {\r\n  const classes = usePageStyles();\r\n  return (\r\n    <>\r\n      <UpButton />\r\n      <Box className={classes.container}>\r\n        <h1>Введение в HTML и CSS</h1>\r\n        <p>\r\n          Для того, чтобы сделать сайт, нужно знать много разных веб языков.\r\n        </p>\r\n        <p>\r\n          Языки HTML и CSS предназначены для верстки сайтов (верстка - это\r\n          размещение элементов сайта по нужным местам). Язык PHP нужен для\r\n          программирования сайта (с его помощью можно, к примеру, сделать\r\n          регистрацию пользователей). Язык JavaScript нужен для того, чтобы\r\n          \"оживить\" сайт: к примеру, сделать меняющиеся картинки (слайдер).\r\n        </p>\r\n        <h1>Язык HTML</h1>\r\n        <p>\r\n          Язык HTML - это основа web сайтов, с его помощью создается каркас\r\n          страницы, которую вы видите в браузере. Если сравнивать страницу сайта\r\n          и обычную бумажную книгу, то на сайте, как и в книге, есть абзацы и\r\n          заголовки.\r\n        </p>\r\n        <p>\r\n          В книге есть название всей книги (по сути самый главный заголовок),\r\n          есть названия глав, параграфов в этих главах и так далее. Заголовки,\r\n          абзацы и другие блоки можно выделить и на странице сайта. Это делается\r\n          с помощью HTML тегов.\r\n        </p>\r\n        <h1>Что такое HTML теги?</h1>\r\n        <p>\r\n          HTML теги - это специальные команды для браузера. Они говорят ему,\r\n          что, к примеру, следует считать заголовком страницы, а что абзацем.\r\n        </p>\r\n        <p>\r\n          Теги строятся по такому принципу: уголок открывающий &lt; потом имя\r\n          тега, уголок закрывающий &gt;. Имя тега может состоять из английских\r\n          букв и цифр. Примеры тегов:\r\n        </p>\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h1&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;b&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n        <p>\r\n          Теги обычно пишутся парами - открывающий тег и соответствующий ему\r\n          закрывающий. Разница между открывающим и закрывающим тегами в том, что\r\n          в закрывающем теге после уголка &lt; стоит слеш /.\r\n        </p>\r\n        <p>\r\n          К примеру, &lt;p&gt; - так я открыл тег, а так - &lt;/p&gt; - я его\r\n          закрыл. Все, что попадает между открывающим и закрывающим тегами,\r\n          подпадает под воздействие нашего тега.\r\n        </p>\r\n        <p>\r\n          Бывают теги, которые не нужно закрывать, например, &lt;br&gt; или\r\n          &lt;img&gt;.\r\n        </p>\r\n        <h1>Атрибуты</h1>\r\n        <p>\r\n          В тегах также могут размещаться <i>атрибуты</i> - специальные команды,\r\n          которые расширяют действие тега. Атрибуты размещаются внутри\r\n          открывающего тега в таком формате:\r\n        </p>\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;тег </span>\r\n              <span className={classes.tegSupport}>атрибут1=</span>\r\n              <span>\"значение\" </span>\r\n              <span className={classes.tegSupport}>атрибут2</span>\r\n              <span>=\"значение2\"</span>\r\n              <span className={classes.tegMaim}>&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n        <p>\r\n          Кавычки могут быть любыми - одинарными или двойными, допустимо их\r\n          вообще их не ставить, если значение атрибута состоит из одного слова\r\n          (но это не желательно).\r\n        </p>\r\n        <h1>Язык CSS</h1>\r\n        <p>\r\n          Язык CSS расширяет возможности языка HTML. Он позволяет менять цвета,\r\n          шрифты, фон, в общем заниматься красотой сайта. А HTML,\r\n          соответственно, отвечает за структуру сайта.\r\n        </p>\r\n        <h1>Приступим</h1>\r\n        <p>\r\n          Итак, вооружившись некоторыми предварительными теоретическими\r\n          знаниями, приступим к подробному изучению языка HTML на практике.\r\n        </p>\r\n\r\n        <Box className={classes.footer}>\r\n          {/* <Box className={classes.footerArrow}></Box> */}\r\n          <Link to=\"/html/2\">\r\n            <Box className={classes.footerArrow}>→</Box>\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PageHTML1);\r\n"],"sourceRoot":""}