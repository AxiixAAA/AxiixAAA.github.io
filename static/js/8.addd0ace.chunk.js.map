{"version":3,"sources":["commponents/Common/UpButton/UpButton.tsx","commponents/Common/UpButton/UpButton.module.css","../node_modules/@mui/icons-material/KeyboardArrowUp.js","pages/School/schoolPages/pages/style.js","pages/School/schoolPages/pages/pageHTML/PageHTML3.jsx"],"names":["UpButton","useState","buttonState","setButtonState","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","innerWidth","className","styles","wrapper","button","show","onClick","scrollTo","top","left","behavior","module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","usePageStyles","makeStyles","theme","container","padding","backgroundColor","palette","background","paper","boxShadow","color","text","school","borderRadius","fontFamily","fontSize","fontWeight","margin","textAlign","blockCode","primary","borderLeft","whiteSpace","counterReset","listStyle","counterIncrement","content","ol","display","marginRight","width","height","borderRight","tegMaim","tegMain","tegSupport","blockTask","minHeight","border","marginTop","footer","borderTop","justifyContent","lineHeight","footerArrow","paddingTop","cursor","blockResaltCode","PageHTML3","classes","to","React","memo"],"mappings":"wMAIaA,EAAe,WACxB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAe,WACbC,OAAOC,QAAU,IACjBH,GAAe,GAEfA,GAAe,IAIvBI,qBAAU,WAEN,OADAF,OAAOG,iBAAiB,SAAUJ,GAC3B,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IASH,OAAO,mCACFC,OAAOK,WAAa,KAAO,qBAAKC,UAAWC,IAAOC,QAAvB,SACvBX,GAAe,sBAAMS,UAAS,UAAKC,IAAOE,OAAZ,YAAsBF,IAAOG,MAAQC,QATxD,WAChBX,OAAOY,SAAS,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,YAKM,SAA0E,cAAC,IAAD,Y,oBC5BtGC,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,yB,iCCC7H,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeJ,EAAS,aAAc,CAC3CK,OAAO,IAETL,EAAQM,aAAU,EAElB,IAAIC,EAAiBN,EAAuBC,EAAQ,KAEhDM,EAAcN,EAAQ,GAEtBO,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,mDACD,mBAEJX,EAAQM,QAAUG,G,iCCjBlB,+CAEaG,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAClDC,UAAW,CACTC,QAAS,WACTC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,UAAWP,EAAMI,QAAQG,UACzBC,MAAOR,EAAMI,QAAQK,KAAKC,OAC1BC,aAAc,OAEd,SAAU,CACRC,WAAY,kBACZC,SAAU,OACVC,WAAY,SACZC,OAAQ,oBACRC,UAAW,UAEb,SAAU,CACRJ,WAAY,kBACZE,WAAY,SACZC,OAAQ,OAEV,QAAS,CACPC,UAAW,UACXH,SAAU,OACVE,OAAQ,qBAIZE,UAAW,CACTT,MAAOR,EAAMI,QAAQK,KAAKS,QAC1Bb,WAAYL,EAAMI,QAAQC,WAAWY,UACrCf,QAAS,UACTiB,WAAYnB,EAAMI,QAAQe,WAC1BJ,OAAQ,UACRK,WAAY,MAGZ,SAAU,CACRC,aAAc,YACdnB,QAAS,MACTa,OAAQ,UAER,SAAU,CACRO,UAAW,OACX,WAAY,CACVC,iBAAkB,YAClBC,QAAS,qBACThB,MAAOR,EAAMI,QAAQK,KAAKgB,GAC1Bb,WAAY,kBACZc,QAAS,eACTV,UAAW,SACXW,YAAa,OACbC,MAAO,OACPC,OAAQ,OACRC,YAAa9B,EAAMI,QAAQ0B,gBAKnCC,QAAS,CACPvB,MAAOR,EAAMI,QAAQK,KAAKuB,SAE5BC,WAAY,CACVzB,MAAOR,EAAMI,QAAQK,KAAKwB,YAG5BC,UAAW,CACTC,UAAW,QACXC,OAAQpC,EAAMI,QAAQ0B,YACtBO,UAAW,OACXnC,QAAS,OAET,SAAU,CACRU,WAAY,kBACZC,SAAU,OACVC,WAAY,SACZC,OAAQ,mBACRC,UAAW,UAEb,QAAS,CACPA,UAAW,UACXH,SAAU,OACVE,OAAQ,qBAGZuB,OAAQ,CACNT,OAAQ,OACRD,MAAO,OACPW,UAAWvC,EAAMI,QAAQ0B,YACzBO,UAAW,OACXX,QAAS,OACTc,eAAgB,eAEhB3B,SAAU,OACV4B,WAAY,MACZ,QAAS,CACPjC,MAAOR,EAAMI,QAAQK,KAAKS,UAG9BwB,YAAa,CACXC,WAAY,OACZC,OAAQ,UACR,UAAW,CACTpC,MAAO,YAGXqC,gBAAiB,CACf3C,QAAS,OAGT,SAAU,CACR0B,MAAO,QACPC,OAAQ,e,iCCjHd,qEAMMiB,EAAY,WAChB,IAAMC,EAAUjD,cAChB,OACE,qCACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAKvB,UAAWwE,EAAQ9C,UAAxB,UACE,8KACA,2mCAMA,sEACA,wkDAOA,gRACA,cAAC,IAAD,CAAK1B,UAAWwE,EAAQ9B,UAAxB,SACE,+BACE,6BACE,sBAAM1C,UAAWwE,EAAQhB,QAAzB,mBAEF,6BACE,wFAEF,6BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,oBAGF,6BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,mBAEF,6BACE,oIAEF,6BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,oBAGF,6BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,mBAEF,6BACE,wHAEF,6BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,yBAKN,eAAC,IAAD,CAAKxD,UAAWwE,EAAQb,UAAxB,UACE,wEACA,6mBAMF,yIACA,06CAOA,yiCAOA,owBAKA,cAAC,IAAD,CAAK3D,UAAWwE,EAAQ9B,UAAxB,SACE,+BACE,+BACE,sBAAM1C,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,sBAEF,+BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,sBAEF,+BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,sBAEF,+BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,sBAEF,+BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,sBAEF,+BACE,sBAAMxD,UAAWwE,EAAQhB,QAAzB,kBACA,6FACA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,2BAKN,eAAC,IAAD,CAAKxD,UAAWwE,EAAQb,UAAxB,UACE,wEACA,ymBAKF,eAAC,IAAD,CAAK3D,UAAWwE,EAAQb,UAAxB,UACE,wEACA,gwBAOF,sEACA,qPAC4C,sEAD5C,gdAGmB,OAGnB,cAAC,IAAD,CAAK3D,UAAWwE,EAAQ9B,UAAxB,SACE,6BACE,+BACE,sBAAM1C,UAAWwE,EAAQhB,QAAzB,iBACA,+JACoC,qEADpC,0CAGA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,yBAKN,eAAC,IAAD,CAAKxD,UAAWwE,EAAQb,UAAxB,UACE,wEACA,0PAGF,sEACA,2NACsC,qEADtC,sFAKA,cAAC,IAAD,CAAK3D,UAAWwE,EAAQ9B,UAAxB,SACE,6BACE,+BACE,sBAAM1C,UAAWwE,EAAQhB,QAAzB,iBACA,+JACoC,qEADpC,0CAGA,sBAAMxD,UAAWwE,EAAQhB,QAAzB,yBAKN,eAAC,IAAD,CAAKxD,UAAWwE,EAAQb,UAAxB,UACE,wEACA,0PAGF,wFACA,0zCAOA,eAAC,IAAD,CAAK3D,UAAWwE,EAAQT,OAAxB,UACE,cAAC,IAAD,CAAMU,GAAG,UAAT,SACE,cAAC,IAAD,CAAKzE,UAAWwE,EAAQL,YAAxB,sBAEF,cAAC,IAAD,CAAMM,GAAG,UAAT,SACE,cAAC,IAAD,CAAKzE,UAAWwE,EAAQL,YAAxB,gCAQGO,cAAMC,KAAKJ","file":"static/js/8.addd0ace.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\r\nimport styles from './UpButton.module.css';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nexport const UpButton: FC = () => {\r\n    const [buttonState, setButtonState] = useState(false)\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > 300) {\r\n            setButtonState(true)\r\n        } else {\r\n            setButtonState(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }\r\n    return <>\r\n        {window.innerWidth > 600 && <div className={styles.wrapper}>\r\n            {buttonState && <span className={`${styles.button} ${styles.show}`} onClick={handleClick}><KeyboardArrowUpIcon /></span>}\r\n        </div>}\r\n    </>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpButton_wrapper__2r6_3\",\"button\":\"UpButton_button__1Siua\",\"show\":\"UpButton_show__2E_YL\",\"hide\":\"UpButton_hide__2NrsI\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const usePageStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: \"5px 15px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.palette.boxShadow,\r\n    color: theme.palette.text.school,\r\n    borderRadius: \"10px\",\r\n\r\n    \"& > h1\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontSize: \"40px\",\r\n      fontWeight: \"normal\",\r\n      margin: \"15px 0px 10px 0px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > h4\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontWeight: \"normal\",\r\n      margin: \"0px\",\r\n    },\r\n    \"& > p\": {\r\n      textAlign: \"justify\",\r\n      fontSize: \"17px\",\r\n      margin: \"0px 0px 10px 0px\",\r\n    },\r\n  },\r\n\r\n  blockCode: {\r\n    color: theme.palette.text.primary,\r\n    background: theme.palette.background.blockCode,\r\n    padding: \"1px 0px\",\r\n    borderLeft: theme.palette.borderLeft,\r\n    margin: \"5px 0px\",\r\n    whiteSpace: \"pre\",\r\n    \r\n\r\n    \"& > ol\": {\r\n      counterReset: \"myCounter\",\r\n      padding: \"0px\",\r\n      margin: \"5px 0px\",\r\n\r\n      \"& > li\": {\r\n        listStyle: \"none\",\r\n        \"&:before\": {\r\n          counterIncrement: \"myCounter\",\r\n          content: \"counter(myCounter)\",\r\n          color: theme.palette.text.ol,\r\n          fontFamily: \"Times New Roman\",\r\n          display: \"inline-block\",\r\n          textAlign: \"center\",\r\n          marginRight: \"10px\",\r\n          width: \"30px\",\r\n          height: \"20px\",\r\n          borderRight: theme.palette.borderRight,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  tegMaim: {\r\n    color: theme.palette.text.tegMain,\r\n  },\r\n  tegSupport: {\r\n    color: theme.palette.text.tegSupport,\r\n  },\r\n\r\n  blockTask: {\r\n    minHeight: \"150px\",\r\n    border: theme.palette.borderRight,\r\n    marginTop: \"15px\",\r\n    padding: \"20px\",\r\n\r\n    \"& > h1\": {\r\n      fontFamily: \"Times New Roman\",\r\n      fontSize: \"40px\",\r\n      fontWeight: \"normal\",\r\n      margin: \"0px 0px 10px 0px\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > p\": {\r\n      textAlign: \"justify\",\r\n      fontSize: \"17px\",\r\n      margin: \"0px 0px 10px 0px\",\r\n    },\r\n  },\r\n  footer: {\r\n    height: \"50px\",\r\n    width: \"100%\",\r\n    borderTop: theme.palette.borderRight,\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n\r\n    fontSize: \"70px\",\r\n    lineHeight: \"0px\",\r\n    \"& > a\": {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  footerArrow: {\r\n    paddingTop: \"20px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#FFD93D\",\r\n    },\r\n  },\r\n  blockResaltCode: {\r\n    padding: \"20px\",\r\n    // boxShadow: \"0 0 7px #ddd\",\r\n\r\n    \"& * td\": {\r\n      width: \"200px\",\r\n      height: \"100px\",\r\n    },\r\n  },\r\n}));\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { UpButton } from \"../../../../../commponents/Common/UpButton/UpButton\";\r\nimport { usePageStyles } from \"../style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageHTML3 = () => {\r\n  const classes = usePageStyles();\r\n  return (\r\n    <>\r\n      <UpButton />\r\n      <Box className={classes.container}>\r\n        <h1>Работа с основными HTML тегами</h1>\r\n        <p>\r\n          Давайте теперь изучим основные теги, которые используются на странице.\r\n          В примерах далее я для простоты не буду приводить структуру всей\r\n          страницы, считайте, что мы всегда работаем внутри тега body, если не\r\n          указано иное.\r\n        </p>\r\n        <h1>Абзацы</h1>\r\n        <p>\r\n          Одним из основных элементов страницы являются абзацы. Их можно\r\n          сравнить с абзацами в книге - каждый абзац начинается с новой строки и\r\n          имеет так называемую красную строку (это когда первая строка текста\r\n          абзаца немного отступает вправо). По умолчанию красной строки нет, но\r\n          ее легко сделать (об этом чуть позже).\r\n        </p>\r\n        <p>Абзац создается с помощью тега &lt;p&gt; таким образом:</p>\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span>Это абзац.</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;/p&gt;</span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span>Это еще один абзац.</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;/p&gt;</span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span>И еще один абзац.</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;/p&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n\r\n        <Box className={classes.blockTask}>\r\n          <h1>Задача 1</h1>\r\n          <p>\r\n            Создайте на вашей странице 5 абзацев с каким-нибудь текстом.\r\n            Посмотрите, как эти абзацы будут выглядеть в браузере.\r\n          </p>\r\n        </Box>\r\n\r\n        <h1>Заголовки страницы</h1>\r\n        <p>\r\n          Кроме абзацев важное значение на странице имеют заголовки. Их также\r\n          можно сравнить с заголовками из книги - каждая глава имеет свой\r\n          заголовок (название этой главы) и разбита на параграфы, которые тоже\r\n          имеют свои заголовки. Ну, а основной текст страницы располагается в\r\n          абзацах.\r\n        </p>\r\n        <p>\r\n          Заголовки создаются с помощью тегов &lt;h1&gt;, &lt;h2&gt;,\r\n          &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt;. Они имеют разную\r\n          степень важности. В заголовке h1 следует располагать название всей\r\n          HTML страницы, в h2 - название блоков страницы, в h3 - название\r\n          подблоков и так далее.\r\n        </p>\r\n        <p>\r\n          Все заголовки по умолчанию жирные и имеют разный размер (это можно\r\n          поменять через CSS, но об этом позже). Для примера сделаем заголовки\r\n          всех уровней:\r\n        </p>\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h1&gt;</span>\r\n              <span>Заголовок h1</span>\r\n              <span className={classes.tegMaim}>&lt;/h1&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h2&gt;</span>\r\n              <span>Заголовок h2</span>\r\n              <span className={classes.tegMaim}>&lt;/h2&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h3&gt;</span>\r\n              <span>Заголовок h3</span>\r\n              <span className={classes.tegMaim}>&lt;/h3&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h4&gt;</span>\r\n              <span>Заголовок h4</span>\r\n              <span className={classes.tegMaim}>&lt;/h4&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h5&gt;</span>\r\n              <span>Заголовок h5</span>\r\n              <span className={classes.tegMaim}>&lt;/h5&gt;</span>\r\n            </li>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;h6&gt;</span>\r\n              <span>Заголовок h6</span>\r\n              <span className={classes.tegMaim}>&lt;/h6&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n\r\n        <Box className={classes.blockTask}>\r\n          <h1>Задача 2</h1>\r\n          <p>\r\n            Скопируйте приведенный выше код себе и запустите его в браузере.\r\n            Посмотрите, как отличаются размеры заголовков.\r\n          </p>\r\n        </Box>\r\n        <Box className={classes.blockTask}>\r\n          <h1>Задача 3</h1>\r\n          <p>\r\n            Сделайте заголовок h1. Ниже сделайте заголовок h2, а под ним - абзац\r\n            с текстом. После абзацев сделайте еще один заголовок h2, а под ним -\r\n            2 абзаца с текстом.\r\n          </p>\r\n        </Box>\r\n\r\n        <h1>Жирный</h1>\r\n        <p>\r\n          Вы уже знаете, что заголовки по умолчанию <b>жирные.</b> Однако, можно\r\n          сделать жирным и обычный текст - достаточно взять его в тег &lt;b&gt;.\r\n          Смотрите пример:{\" \"}\r\n        </p>\r\n\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n              <span>\r\n                Это обычный текст, а это &lt;b&gt;<b>жирный</b>&lt;/b&gt; текст.\r\n              </span>\r\n              <span className={classes.tegMaim}>&lt;/p&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n\r\n        <Box className={classes.blockTask}>\r\n          <h1>Задача 4</h1>\r\n          <p>Проверьте работу тега &lt;b&gt; на вашей странице.</p>\r\n        </Box>\r\n\r\n        <h1>Курсив</h1>\r\n        <p>\r\n          Кроме жирного можно сделать также и <i>курсив</i> с помощью тега\r\n          &lt;i&gt;:\r\n        </p>\r\n\r\n        <Box className={classes.blockCode}>\r\n          <ol>\r\n            <li>\r\n              <span className={classes.tegMaim}>&lt;p&gt;</span>\r\n              <span>\r\n                Это обычный текст, а это &lt;i&gt;<i>жирный</i>&lt;/i&gt; текст.\r\n              </span>\r\n              <span className={classes.tegMaim}>&lt;/p&gt;</span>\r\n            </li>\r\n          </ol>\r\n        </Box>\r\n\r\n        <Box className={classes.blockTask}>\r\n          <h1>Задача 5</h1>\r\n          <p>Проверьте работу тега &lt;i&gt; на вашей странице.</p>\r\n        </Box>\r\n\r\n        <h1>Замечания</h1>\r\n        <p>\r\n          Обратите внимание на то, что теги &lt;b&gt; и &lt;i&gt; следует\r\n          использовать внутри какого-либо другого тега, например абзаца. В этом\r\n          случае абзацы создают общую структуру страницы (абзацы и заголовки), а\r\n          указанные теги делают жирным или курсивом отдельные кусочки текста.\r\n        </p>\r\n\r\n        <Box className={classes.footer}>\r\n          <Link to=\"/html/2\">\r\n            <Box className={classes.footerArrow}>←</Box>\r\n          </Link>\r\n          <Link to=\"/school\">\r\n            <Box className={classes.footerArrow}>→</Box>\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PageHTML3);\r\n"],"sourceRoot":""}