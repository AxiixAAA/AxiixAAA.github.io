{"version":3,"sources":["hoc/withAuthRedirect.js","commponents/Profile/Profileinfo/Profileinfo.module.css","commponents/Profile/Profileinfo/ProfileDataForm/ProfileDataForm.module.css","commponents/Profile/SendMessage/SendMessage.module.css","commponents/Profile/Profileinfo/ProfileDataForm/ProfileDataForm.jsx","assets/images/avatar.png","commponents/Common/UserSmallPhoto/UserSmallPhoto.jsx","commponents/Common/UserSmallPhoto/UserSmallPhotoContainer.jsx","commponents/Profile/MyPosts/Post/Post.jsx","commponents/Profile/MyPosts/MyPosts.jsx","commponents/Profile/MyPosts/MyPostsContainer.jsx","commponents/Common/NavigatorOnline/NavigatorOnline.jsx","commponents/Profile/Profileinfo/ProfileStatus/ProfileStatusWithHooks.jsx","commponents/Profile/Profileinfo/ProfileDataForm/ProfileData.jsx","commponents/Profile/SendMessage/SendMessage.tsx","redux/selectors/friendsSelector.ts","commponents/FriendsMiniBlock/FriendsMiniBlock.jsx","pages/Friends/Friends.tsx","commponents/Profile/Profileinfo/Profileinfo.jsx","commponents/Profile/Profile.jsx","commponents/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","useStyles","makeStyles","theme","button","backgroundColor","palette","background","color","text","primary","width","marginTop","paddingBottom","fontFamily","fontSize","lineHeight","borderRadius","cursor","boxShadow","border","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","classes","onSubmit","className","style","formSummaryError","s","Container","Name","Data","sx","createField","Input","type","Textarea","Footer","Object","keys","contacts","map","key","contact","contactLeft","contactRigth","UserSmallPhoto","src","photos","small","userPhoto","UserSmallPhotoContainer","compose","profilePage","getUserProfile","Post","paper","padding","postAvatar","display","height","fullName","paddingLeft","textDecoration","postFooter","borderTop","borderBottom","paddingTop","postLikes","alignItems","postMessage","marginBottom","Grid","container","Box","message","item","viewBox","xmlns","fill","d","likesCount","sss","AddNewPostForm","margin","resize","outline","MyPosts","memo","postsElements","posts","p","id","AddNewPostFormRedux","values","addPost","newPostText","xs","direction","justifyContent","textAlign","isOwner","Field","name","component","placeholder","MyPostsContainer","dispatch","actions","addPostActionCreator","Online","useState","isOnline","set_isOnline","interval","InternetErrMessagenger","navigator","onLine","useEffect","setInterval","clearInterval","ProfileStatus","letterSpacing","ProfileStatusActiv","ProfileStatusDisable","ProfileStatusWithHooks","editMode","setEditMode","status","setStatus","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData_Top","ProfileData_NameAndOnline","ProfileData_Content","ProfileData_ContentName","secondary","ProfileData_ContentData","auxiliary","ProfileDataFooter","Contact","contactTitle","contactValue","href","ProfileData","goToEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","SendMessage","userId","useDispatch","setValue","isTyping","setTyping","isSended","setSended","styles","wrapper","sended","link","input","target","sendBtn","sendMessage","cancelBtn","write","getFriends","friendsSection","friends","user","overflow","whiteSpace","FriendsMiniBlock","followingInProgress","unfollowThunk","followThunk","alt","UserName","friendsWrapper","flexWrap","Friends","useSelector","inProgressFollow","getFollowingInProgress","follow","unfollow","getFollowedFriends","length","friend","NewPhotoText","hover","mainFoto","ProfileDataForm","flexDirection","marginRight","buttonHover","containerMiniBloc","Profileinfo","savePhoto","saveProfile","spacing","large","htmlFor","profileID","NewPhoto","files","initialValues","formData","then","ProfileButtonFollo","subscribe","setSubscribe","console","log","prevMode","Profile","ProfileContainer","match","params","authorizedUserId","history","push","getStatus","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/3.557927db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n// 2я контейнерная компонента\r\n// конект к стору и забираем значение isAuth\r\nlet mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\n// 1я контейнерная компонента\r\n// Функция, которая принимает на входе component --> типа пропс\r\nexport const withAuthRedirect = (Component) => {\r\n    // создаём класс \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            // задаём логику редиректа\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/> \r\n            // перерисовываем целевую компоненту которую нам на фходе подадут \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n    let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profileinfo_container__1_ZnA\",\"Kartinka\":\"Profileinfo_Kartinka__3p47q\",\"ProfileBoxFriends\":\"Profileinfo_ProfileBoxFriends__B01RA\",\"NewPhotoText\":\"Profileinfo_NewPhotoText__2ndnj\",\"NewPhoto\":\"Profileinfo_NewPhoto__2Z9dH\",\"contact\":\"Profileinfo_contact__V-lUl\",\"ProfileData\":\"Profileinfo_ProfileData__2x240\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ProfileDataForm_Container__38zGY\",\"Name\":\"ProfileDataForm_Name__kjzhL\",\"Data\":\"ProfileDataForm_Data__3f4tk\",\"contact\":\"ProfileDataForm_contact__2wPK-\",\"contactLeft\":\"ProfileDataForm_contactLeft__1ZELD\",\"contactRigth\":\"ProfileDataForm_contactRigth__2Onoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SendMessage_wrapper__iILFO\",\"write\":\"SendMessage_write__1VL9p\",\"input\":\"SendMessage_input__3GxUY\",\"link\":\"SendMessage_link__DUDBJ\",\"sendBtn\":\"SendMessage_sendBtn__S-bn2\",\"cancelBtn\":\"SendMessage_cancelBtn__1bCWw\"};","import { createField, Input, Textarea } from \"../../../../commponents/Common/FormsControls/FormsControls\"\r\nimport React from \"react\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport s from './ProfileDataForm.module.css';\r\nimport style from '../../../Common/FormsControls/FormsControls.module.css';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{ \r\n        '& > button':{\r\n            backgroundColor: theme.palette.background.button,\r\n            color: theme.palette.text.primary,\r\n            width: '100%',\r\n            marginTop: '7px',\r\n            paddingBottom: '5px',\r\n            fontFamily: 'monospace',\r\n            fontSize: '15px',\r\n            lineHeight: '150%',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            boxShadow: '0px 0px 2px wheat',\r\n            border: 'none',\r\n        },\r\n        '& > button:hover':{\r\n            color: 'white',\r\n            boxShadow: '0px 0px 2px rgb(252, 242, 223)',\r\n        },\r\n    },    \r\n \r\n}),\r\n);\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) =>{\r\nconst classes = useStyles();   \r\n\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n     {error && <div className={style.formSummaryError}>{error}</div>}\r\n    <div className={s.Container}>\r\n        <div className={s.Name}>\r\n            <div>Имя:</div>\r\n            <div>Ищу работу:</div>\r\n            <div>Профессиональные навыки:</div> \r\n            <div>Обо мне:</div> \r\n            <div></div> \r\n        </div>\r\n\r\n        <div className={s.Data} sx={{ }}>\r\n            {createField(\"Full name\", \"fullName\", [], Input)}\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type:\"checkbox\"})}\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n    </div>\r\n        <div className={s.Footer}> \r\n            {/* Contacts - обьект, по нему нужно итерироваться, делаем это при помощи Object.keys()  */}\r\n            {/* .map(key => мы хотим на базе каждого ключа, мы хотим отрисовать компонент  Contact*/}\r\n            \r\n            {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <div className={s.contactLeft}>\r\n                    <div>{key}:</div>\r\n                </div>\r\n                <div>\r\n                    <div className={s.contactRigth}>\r\n                         {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            })}\r\n        </div> \r\n    \r\n        <div className={classes.button}><button>save</button> </div>\r\n </form>\r\n} \r\n\r\n// @ts-ignore\r\nexport const ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm);\r\n","export default __webpack_public_path__ + \"static/media/avatar.0d14c699.png\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\n\r\nconst UserSmallPhoto = ({profile}) => {\r\n    // Необходимое условие без которого будет падать ошибка из за того что  profile не успеет обработаться\r\n    if (!profile) {\r\n        return <div> . . .</div>\r\n      }\r\n  return (\r\n    <div >\r\n        <img src={profile.photos.small || userPhoto} />     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSmallPhoto","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfile} from \"../../../redux/profile-reducer\";\r\nimport UserSmallPhoto from \"./UserSmallPhoto\";\r\n\r\n\r\nclass UserSmallPhotoContainer extends React.Component {\r\n\r\n  render(){\r\n     return <UserSmallPhoto {...this.props} profile={this.props.profile}/> \r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps,{getUserProfile}))(UserSmallPhotoContainer);","import UserSmallPhotoContainer from '../../../../commponents/Common/UserSmallPhoto/UserSmallPhotoContainer';\r\nimport { Box, Grid } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Post: {\r\n        color: 'grey',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: '15px',\r\n        padding: '10px 10px 0px 10px',\r\n        boxShadow: theme.palette.boxShadow,\r\n        borderRadius: '15px',\r\n    },\r\n    postAvatar :{\r\n    display: 'flex',\r\n\r\n    '& > * img':{\r\n        width: '50px',\r\n        height: '50px',\r\n        borderRadius: '100%',\r\n        cursor: 'pointer',\r\n    }},\r\n    fullName: {\r\n        paddingLeft: '15px',\r\n        color: theme.palette.text.primary,\r\n        cursor: 'pointer',\r\n        fontSize: '15px',\r\n    \r\n        '& > a:hover':{\r\n            textDecoration: 'underline',\r\n    }},\r\n    postFooter:{\r\n        borderTop: theme.palette.borderBottom,\r\n        paddingTop: '5px',\r\n\r\n    },\r\n    postLikes:{\r\n        alignItems: 'center',\r\n        '& > * svg':{\r\n            width: '20px',\r\n    }\r\n    },\r\n    postMessage:{\r\n        marginBottom: '5px',\r\n    }\r\n  }),\r\n);\r\n\r\nconst Post = (props) => {\r\nconst classes = useStyles();   \r\n    return <> \r\n    <Grid container>\r\n        \r\n    </Grid>\r\n    <Box className={classes.Post}>\r\n        <Box className={classes.postAvatar}>\r\n            <Box>\r\n                <UserSmallPhotoContainer />\r\n            </Box>\r\n            <Box className={classes.fullName}>\r\n                {props.fullName}\r\n            </Box>\r\n        </Box>\r\n        <Box className={classes.postMessage}>\r\n            { props.message }   \r\n        </Box>\r\n      \r\n        <Box className={classes.postFooter}> \r\n        \r\n            <Grid container className={classes.postLikes}>\r\n                <Grid item>\r\n                    {/* <NavLink to=\"/profile\"> */}\r\n                        <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\"></path><path d=\"M16 4a5.95 5.95 0 00-3.89 1.7l-.12.11-.12-.11A5.96 5.96 0 007.73 4 5.73 5.73 0 002 9.72c0 3.08 1.13 4.55 6.18 8.54l2.69 2.1c.66.52 1.6.52 2.26 0l2.36-1.84.94-.74c4.53-3.64 5.57-5.1 5.57-8.06A5.73 5.73 0 0016.27 4zm.27 1.8a3.93 3.93 0 013.93 3.92v.3c-.08 2.15-1.07 3.33-5.51 6.84l-2.67 2.08a.04.04 0 01-.04 0L9.6 17.1l-.87-.7C4.6 13.1 3.8 11.98 3.8 9.73A3.93 3.93 0 017.73 5.8c1.34 0 2.51.62 3.57 1.92a.9.9 0 001.4-.01c1.04-1.3 2.2-1.91 3.57-1.91z\" fill=\"currentColor\" fill-rule=\"nonzero\"></path></g></svg>\r\n                    {/* </NavLink> */}\r\n                </Grid>\r\n                <Grid item>\r\n                    {/* <NavLink to=\"/profile\"> */}\r\n                        {props.likesCount}\r\n                    {/* </NavLink> */}\r\n                </Grid>\r\n            </Grid>\r\n        \r\n        </Box>\r\n    </Box>\r\n</>\r\n}\r\n\r\n\r\nexport default Post;\r\n","// @ts-nocheck\r\nimport { Textarea } from \"../../../commponents/Common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport UserSmallPhotoContainer from \"../../Common/UserSmallPhoto/UserSmallPhotoContainer\";\r\nimport { Box, Grid } from \"@mui/material\";\r\n\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\nsss: {\r\n    '& > button':{\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.background.button,\r\n        borderRadius: '4px',\r\n    },\r\n    '& > * textarea':{\r\n      backgroundColor: theme.palette.background.paper,\r\n      color: theme.palette.text.primary\r\n    }\r\n},\r\n\r\nAddNewPostForm:{\r\n    boxShadow:theme.palette.boxShadow,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%',\r\n    marginTop: '18px',\r\n    borderRadius: '15px',\r\n    padding: '10px 0px 10px 0px',\r\n    fontSize: '15px',\r\n\r\n    '& > * img': {\r\n        width: '35px',\r\n        borderRadius: '100%',\r\n        margin: '0',\r\n    },\r\n    '& > * textarea':{\r\n        width: '100%',\r\n        fontSize: '15px',\r\n        resize:'none', /*указывает, может ли размер элемента изменяться пользователем.*/\r\n        outline: 'none;', /*Уберает подсветку у textaria*/\r\n        border: 'none',\r\n    },\r\n    '& > * button':{\r\n        fontFamily: 'monospace',\r\n        fontSize: '1em',\r\n        cursor: 'pointer',\r\n        boxShadow: '0px 0px 2px wheat',\r\n        border: 'none',\r\n        lineHeight: '150%',\r\n    },\r\n    '& > * button:hover':{\r\n        color: 'white',\r\n    },\r\n}\r\n}),\r\n);\r\n\r\nconst MyPosts = React.memo(props => {\r\nlet postsElements = props.posts.map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount} fullName={props.fullName}/>);\r\n\r\nlet onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n}\r\n\r\nreturn (\r\n    <Box>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <Box>\r\n        {postsElements}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\nconst classes = useStyles();\r\n\r\n    return(\r\n        <Grid container xs={12} className={classes.AddNewPostForm}>\r\n            {/* Top */}\r\n            <Grid xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"flex-start\"  \r\n            >\r\n                <Grid item xs={1.1} style={{textAlign: 'center'}}> <UserSmallPhotoContainer /></Grid>\r\n                <Grid item xs={10.5} className={classes.sss}>\r\n                    {props.isOwner\r\n                    ? <Field name=\"newPostText\" component={Textarea}\r\n                        placeholder={\"Что у вас нового ?\"} />\r\n                    : <Field name=\"newPostText\" component={Textarea}\r\n                        placeholder={\"Напишите что-нибудь...\"} />\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            {/* Bottom */}\r\n            <Grid xs={11.7} \r\n                container\r\n                justifyContent=\"flex-end\"\r\n                \r\n            >\r\n                <form onSubmit={props.handleSubmit} className={classes.sss}> \r\n                    <button >Опубликовать</button>\r\n                </form>\r\n            </Grid>\r\n            \r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddMewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n\r\n","// import React from \"react\";\r\nimport { actions } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    // debugger\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    fullName: state.profilePage.profile.fullName\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(actions.addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const Online = () =>{\r\n\r\n    const [isOnline, set_isOnline] = useState(true);\r\n    let interval = null;\r\n   \r\n    const InternetErrMessagenger = () => set_isOnline(navigator.onLine===true); // for do like this shortform\r\n   \r\n    \r\n    useEffect(()=>{\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n       interval = setInterval(InternetErrMessagenger, 6000); // call the function name only not with function with call `()`\r\n       return ()=>{\r\n          clearInterval(interval) // for component unmount stop the interval\r\n       }\r\n    },[])\r\n\r\n    return( <div>\r\n        {isOnline === true ? \"online\" : \"ofline\" }\r\n    </div> ) \r\n}","/* eslint-disable no-mixed-operators */\r\nimport { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    ProfileStatus:{\r\n        color: theme.palette.text.primary,\r\n        cursor: 'pointer',\r\n        height: '26px', \r\n        fontSize: '14px',\r\n        lineHeight: '200%',\r\n        paddingLeft: '2px',\r\n        fontFamily: 'monospace',\r\n        letterSpacing: '1px',\r\n    },\r\n    ProfileStatusActiv:{ \r\n    '& > input':{\r\n        border: 'none',\r\n        boxShadow: theme.palette.boxShadow,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        width: '99%',\r\n        borderRadius: '0px',\r\n        outline:'none',\r\n        fontSize: '14px',\r\n        height: '24px',\r\n        lineHeight: '150%',\r\n        fontFamily: 'monospace',\r\n        letterSpacing: '1px',\r\n    }},\r\n    ProfileStatusDisable:{\r\n        color: theme.palette.text.primary,\r\n        height: '26px', \r\n        fontSize: '14px',\r\n        lineHeight: '200%',\r\n        paddingLeft: '2px',\r\n        fontFamily: 'monospace',\r\n        letterSpacing: '1px',\r\n  }\r\n}),\r\n);\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\nconst classes = useStyles();  \r\n    //local state\r\n    // useState - возвращиет массив / Деструктуризация\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // Метод, закинте в меня функцию, которую я выполню, когда уже произойдёт отрисовка\r\n    // [] - Говорим, что бы отрисовалось всего 1 раз как componentDidMount\r\n    useEffect(() => {\r\n       setStatus(props.status)\r\n    //  Нсли props.status будет не таким каким он был раньше,пожалуйста запусти наш useEffect\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    // при каждом напечатанном символе мы отправляем значение в state\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n     }\r\n\r\n    return (\r\n        <div>\r\n           { props.isOwner\r\n                ? !editMode &&\r\n                    <div className={classes.ProfileStatus}>\r\n                       <div onClick={activateEditMode}>{props.status || \"-----\"}</div>\r\n                    </div> ||\r\n                  editMode &&\r\n                    <div className={classes.ProfileStatusActiv}>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode} value={status} />\r\n                    </div>\r\n                : !editMode &&\r\n                <div className={classes.ProfileStatusDisable}>\r\n                   <div>{props.status || \"-----\"}</div>\r\n                </div> \r\n           }          \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { Online } from \"../../../../commponents/Common/NavigatorOnline/NavigatorOnline\"\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\"\r\nimport s from '../Profileinfo.module.css';\r\nimport { Box } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ProfileData_Top:{\r\n        borderBottom: theme.palette.borderBottom,\r\n        color: theme.palette.text.primary,\r\n        fontSize: '19px',\r\n        fontFamily:'Arial',\r\n        padding: '7px 0px 5px 0px',\r\n    \r\n        '& > * span': {\r\n            fontSize: '14px',\r\n            color: theme.palette.text.primary,\r\n        },\r\n        '& > div:nth-child(2)': {\r\n            fontSize: '14px',\r\n            color: theme.palette.text.primary,\r\n        },\r\n    },\r\n    ProfileData_NameAndOnline:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    ProfileData_Content:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderBottom: '1px solid #2B2B2B',\r\n        paddingTop: '15px ',\r\n    },\r\n    ProfileData_ContentName:{\r\n        width: '40%',\r\n        color: theme.palette.text.secondary,\r\n\r\n        '& > div':{\r\n            marginBottom: '15px',\r\n        }\r\n    },\r\n    ProfileData_ContentData:{\r\n        width: '60%',\r\n        color: theme.palette.text.auxiliary,\r\n\r\n        '& > div':{\r\n            marginBottom: '15px',\r\n        }\r\n    },\r\n    ProfileDataFooter: {\r\n        paddingTop: '10px',\r\n    },\r\n    Contact:{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    contactTitle: {\r\n        color: theme.palette.text.auxiliary,\r\n        width: '20%',\r\n        paddingLeft: '60px',\r\n        marginBottom: '3px',\r\n    },\r\n    contactValue:{\r\n        width: '80%',\r\n        '& > a':{\r\n            color: 'grey',\r\n        },\r\n        '& > a:hover':{\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    button:{\r\n        '& > button':{\r\n            borderRadius: '4px',\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.background.button,\r\n        },\r\n    }\r\n  }),\r\n);\r\n\r\nconst ProfileData = ({profile,isOwner, goToEditMode,status,updateStatus}) =>{\r\nconst classes = useStyles(); \r\n    return <Box className={s.ProfileData}>\r\n    \r\n        <Box className={classes.ProfileData_Top}>\r\n            <Box className={classes.ProfileData_NameAndOnline}>\r\n                <Box>{profile.fullName}</Box>\r\n                <span><Online /></span>  \r\n            </Box>\r\n            <Box className={classes.status}><ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/></Box>\r\n        </Box>\r\n    \r\n        <Box className={classes.ProfileData_Content}>\r\n            <Box className={classes.ProfileData_ContentName}>\r\n                <Box><b>Ищу работу:</b></Box>\r\n                <Box><b>Мои профессиональные навыки:</b></Box>\r\n                <Box><b>Обо мне:</b></Box>\r\n            </Box>\r\n            <Box className={classes.ProfileData_ContentData}>\r\n                <Box>{profile.lookingForAJob ? \"Yes\" : \"No\"}</Box>\r\n                <Box>{profile.lookingForAJobDescription}</Box>\r\n                <Box>{profile.aboutMe}</Box>\r\n            </Box>\r\n        </Box>\r\n        <Box className={classes.ProfileDataFooter}>\r\n            {/* Contacts - обьект, по нему нужно итерироваться, делаем это при помощи Object.keys()  */}\r\n            {/* .map(key => мы хотим на базе каждого ключа, мы хотим отрисовать компонент  Contact*/}\r\n           <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n               return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </Box>\r\n        {isOwner && <Box className={classes.button}> <button onClick={goToEditMode}>Редактировать</button> </Box>}\r\n     </Box>\r\n    } \r\n    \r\n    const Contact = ({contactTitle, contactValue}) => {\r\n    const classes = useStyles(); \r\n       return <Box className={classes.Contact}>\r\n            <Box className={classes.contactTitle}> {contactTitle}:</Box>\r\n            <Box className={classes.contactValue}> <a href={contactValue}> {contactValue} </a> </Box>\r\n        </Box>\r\n    }\r\n    \r\nexport default ProfileData","import React, { ChangeEvent, FC, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { sendMessage } from '../../../redux/dialogs-reducer'\r\nimport styles from './SendMessage.module.css'\r\n\r\n//@ts-ignore\r\nexport const SendMessage: FC<TProps> = ({ userId, isOwner }) => {\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState('')\r\n    const [isTyping, setTyping] = useState(false)\r\n    const [isSended, setSended] = useState(false)\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const handleClick = () => {\r\n        dispatch(sendMessage(userId, value))\r\n        setValue('')\r\n        setSended(true)\r\n    }\r\n\r\n    return (\r\n        !isOwner && <div className={styles.wrapper}>\r\n            {!isSended // if message has been sent, show Link\r\n                ? !isTyping // if click on 'Написать сообщение', show Input\r\n                    ? <span className={styles.write} onClick={() => setTyping(true)}>Написать сообщение</span>\r\n                    : <div>\r\n                        <input className={styles.input} type=\"text\" autoFocus value={value} onChange={handleChange} />\r\n                        <button className={styles.sendBtn} onClick={handleClick}>✓</button>           \r\n                        <button className={styles.cancelBtn} onClick={() => setTyping(false)}>✗</button>\r\n                    </div>\r\n                : <div>\r\n                    <span className={styles.sended}>Отправлено!</span>\r\n                    <Link to={'/dialogs'} className={styles.link}>Перейти в диалоги</Link>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype TProps = {\r\n    userId: number\r\n    isOwner: boolean\r\n}","import { TGlobalState } from \"../reduxStore\";\r\n\r\nexport const getFriends = (state: TGlobalState) => state.friendsSection.friends\r\nexport const getTotalFriends = (state: TGlobalState) => state.friendsSection.totalFriends","import React from \"react\";\r\nimport userPhoto from \"../../assets/images/avatar.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    user:{\r\n        textAlign: 'center',\r\n        width: '70px',\r\n        height: '85px',\r\n        \r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        '& * img':{\r\n            width: '50px',\r\n            height: '50px',\r\n            borderRadius: '50%',\r\n        },\r\n        '& * a':{\r\n            color: theme.palette.text.primary,\r\n            fontSize: '12px',\r\n        },\r\n\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nlet FriendsMiniBlock = ({user,followingInProgress,unfollowThunk,followThunk}) => {\r\nconst classes = useStyles();   \r\n\r\n    return <>\r\n            <Box className={classes.user}>\r\n                <Box>\r\n                    {/* Жмякаем на мини фотографию, и переходим на профиль пользователя */}\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img \r\n                        src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                        alt=\"картинка\"\r\n                        className={classes.userPhoto}\r\n                        />\r\n                    </NavLink>\r\n                </Box>\r\n                <Box >  \r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <Box className={classes.UserName}>{user.name}</Box>\r\n                    </NavLink>\r\n                </Box>\r\n            </Box>\r\n    </>\r\n}\r\nexport default React.memo(FriendsMiniBlock)\r\n\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFollowedFriends } from \"../../redux/reducers/friendsReducer\";\r\nimport { followThunk, unfollowThunk } from \"../../redux/user-reducer\";\r\nimport { getFriends } from \"../../redux/selectors/friendsSelector\";\r\nimport { getFollowingInProgress } from \"../../redux/users-selectors\";\r\nimport FriendsMiniBlock from \"../../commponents/FriendsMiniBlock/FriendsMiniBlock\";\r\nimport { Box } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles: any = makeStyles((theme: any) => ({\r\n  friendsWrapper: {\r\n    width: \"210px\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    padding: \"5px 5px 0px 5px\",\r\n    overflow: \"auto\",\r\n    height: \"250px\",\r\n    margin: \"10px 0px 0px 0px\",\r\n    borderRadius: \"8px\",\r\n    direction: \"rtl\",\r\n    boxShadow: theme.palette.boxShadow,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Friends: FC = () => {\r\n  const classes = useStyles();\r\n  const friends = useSelector(getFriends);\r\n  const inProgressFollow = useSelector(getFollowingInProgress);\r\n  const dispatch = useDispatch();\r\n  const follow = (userId: number) => dispatch(followThunk(userId));\r\n  const unfollow = (userId: number) => dispatch(unfollowThunk(userId));\r\n\r\n  useEffect(() => {\r\n    dispatch(getFollowedFriends());\r\n  }, [dispatch, inProgressFollow]);\r\n\r\n  return (\r\n    <Box>\r\n      {friends.length !== 0 ? (\r\n        <div className={classes.friendsWrapper}>\r\n          {friends.map((friend) => {\r\n            return (\r\n              <FriendsMiniBlock\r\n                user={friend}\r\n                followingInProgress={inProgressFollow}\r\n                followThunk={follow}\r\n                unfollowThunk={unfollow}\r\n                key={friend.id}\r\n              />\r\n            );\r\n          })}\r\n          {/* <UpButton /> */}\r\n        </div>\r\n      ) : (\r\n        null\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(Friends);\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { useState } from \"react\";\r\nimport s from \"./Profileinfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport { ProfileDataFormReduxForm } from \"./ProfileDataForm/ProfileDataForm\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\nimport ProfileData from \"./ProfileDataForm/ProfileData\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { followThunk } from \"../../../redux/user-reducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SendMessage } from \"../SendMessage/SendMessage\";\r\nimport Friends from \"../../../pages/Friends/Friends\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  NewPhotoText: {\r\n    color: theme.palette.text.paper,\r\n    backgroundColor: theme.palette.background.button,\r\n    boxShadow: theme.palette.boxShadow,\r\n    display: \"block\",\r\n    textAlign: \"center\",\r\n    paddingBottom: \"5px\",\r\n    fontFamily: \"monospace\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n    lineHeight: \"200%\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  sss: {\r\n    \"& > label:hover\": {\r\n      color: theme.palette.text.hover,\r\n    },\r\n  },\r\n  mainFoto: {\r\n    width: \"100%\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: theme.palette.boxShadow,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  ProfileDataForm: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    boxShadow: theme.palette.boxShadow,\r\n    borderRadius: \"20px\",\r\n    padding: \"2.4%\",\r\n    width: \"95%\",\r\n    fontSize: \"13px\",\r\n    fontFamily: \"sans-serif\",\r\n    paddingTop: \"5px\",\r\n\r\n    \"& > * b\": {\r\n      color: \"#848484\",\r\n    },\r\n  },\r\n  button: {\r\n    \"& > button\": {\r\n      width: \"100%\",\r\n      height: \"30px\",\r\n\r\n      backgroundColor: theme.palette.background.button,\r\n      color: theme.palette.text.primary,\r\n      borderRadius: \"7px\",\r\n      border: \"none\",\r\n      cursor: \"pointer\",\r\n\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    \"& > svg\": {\r\n      marginRight: \"5px\",\r\n    },\r\n    \"& > button:hover\": {\r\n      backgroundColor: theme.palette.background.buttonHover,\r\n      color: \"white\",\r\n    },\r\n  },\r\n  containerMiniBloc: {\r\n    width: \"212px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.palette.boxShadow,\r\n    borderRadius: \"8px\",\r\n    height: \"100px\",\r\n    marginTop: \"10px\",\r\n  },\r\n}));\r\n\r\nconst Profileinfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  // console.log(profile);\r\n\r\n  const classes = useStyles();\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Box />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  //   console.log(profile.userId);\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {/* Lev */}\r\n        <Grid item xs={3.5}>\r\n          {/* Photo */}\r\n          <Grid container direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n              <div>\r\n                <img\r\n                  src={profile.photos.large || userPhoto}\r\n                  className={classes.mainFoto}\r\n                />\r\n                {isOwner ? (\r\n                  <>\r\n                    <Box className={classes.sss}>\r\n                      <label htmlFor={\"img\"} className={classes.NewPhotoText}>\r\n                        обновить фотографию\r\n                      </label>\r\n                    </Box>\r\n\r\n                    <Friends />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ProfileButtonFollo profileID={profile.userId} />\r\n                    <SendMessage userId={profile.userId} isOwner={isOwner} />\r\n                  </>\r\n                )}\r\n                <div className={s.NewPhoto}>\r\n                  {isOwner && (\r\n                    <input\r\n                      type={\"file\"}\r\n                      onChange={onMainPhotoSelected}\r\n                      id={\"img\"}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Prav */}\r\n        <Grid item xs={8.5}>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Box className={classes.ProfileDataForm}>\r\n                {editMode ? (\r\n                  <ProfileDataFormReduxForm\r\n                    initialValues={profile}\r\n                    profile={profile}\r\n                    onSubmit={onSubmit}\r\n                  />\r\n                ) : (\r\n                  <ProfileData\r\n                    goToEditMode={() => {\r\n                      setEditMode(true);\r\n                    }}\r\n                    profile={profile}\r\n                    isOwner={isOwner}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                  />\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid style={{ width: \"100%\" }}>\r\n              <MyPostsContainer isOwner={isOwner} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profileinfo;\r\n\r\nconst ProfileButtonFollo = ({ profileID }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [subscribe, setSubscribe] = useState(\"Подписаться\");\r\n\r\n  const sss = () => {\r\n    setSubscribe((prevMode) =>\r\n      prevMode === \"Подписаться\" ? \"Отписаться\" : \"Подписаться\"\r\n    );\r\n  };\r\n\r\n  const followw = (userId) => {\r\n    dispatch(followThunk(userId));\r\n  };\r\n\r\n  //   const unfolloww = (userId) => {\r\n  //     dispatch(unfollowThunk(userId));\r\n  //   };\r\n  console.log(subscribe);\r\n  return (\r\n    <div className={classes.button}>\r\n      <button\r\n        onClick={() => {\r\n          sss();\r\n          followw(profileID);\r\n        }}\r\n      >\r\n        {subscribe}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    \r\n    <div>\r\n        <Profileinfo    savePhoto={props.savePhoto}\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile} \r\n                        saveProfile={props.saveProfile}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus} \r\n        />     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile\r\n","import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId); // Thunk ~ санка *.*\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshProfile(); \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        // Если Id изи текущих props != Id изи прошлых props меняем на  prevProps\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();   \r\n        }\r\n    }\r\n\r\n\r\n  render(){\r\n\r\n    return(\r\n      <Profile {...this.props} profile={this.props.profile}\r\n       status={this.props.status}  updateStatus={this.props.updateStatus}\r\n       isOwner={!this.props.match.params.userId}\r\n       savePhoto={this.props.savePhoto}\r\n       />    \r\n    )\r\n  }\r\n}\r\n\r\n// mapStateToProps - отслеживает измениния в state .profilePage.profile если они произошли, то указанные переменные перерисуются \r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}