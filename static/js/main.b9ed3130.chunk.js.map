{"version":3,"sources":["commponents/Header/Header.module.css","commponents/Common/FormsControls/FormsControls.module.css","api/api.ts","api/dialogs.ts","redux/dialogs-reducer.ts","api/profile-api.ts","redux/profile-reducer.ts","assets/images/user.png","api/newsAPI.ts","redux/reducers/newsReducer.ts","api/chat-api.ts","redux/chat-reducer.ts","redux/reducers/friendsReducer.ts","commponents/Common/Preloader/Preloader.js","redux/users-selectors.ts","reportWebVitals.js","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/time-reducer.js","redux/reduxStore.ts","commponents/Navbar/Navbar.jsx","commponents/Header/Header.jsx","commponents/Header/HeaderContainer.jsx","commponents/Users/User.jsx","commponents/Users/UserNavbar/UserNavbar.jsx","commponents/Users/UsersSearchForm/UsersSearchForm.tsx","commponents/Users/Users.tsx","commponents/Users/UsersContainer.tsx","commponents/utils/validators/validators.ts","commponents/Login/Login.tsx","commponents/Setings/settingsComponent/ThemeSwitch/ThemeSwitch.jsx","commponents/Setings/settingsComponent/TimeSwitch/GreenSwitch.jsx","commponents/Setings/settingsComponent/TimeSwitch/Time.jsx","commponents/Setings/settingsComponent/TimeSwitch/TimeSwitch.jsx","commponents/Setings/settingsComponent/ExitButton/ExitButton.jsx","commponents/Setings/Setings.jsx","App.js","MyApp.js","index.js","api/users-api.ts","commponents/utils/object-helpers.js","redux/user-reducer.ts","commponents/Common/FormsControls/FormsControls.js","commponents/Users/Users.module.css"],"names":["module","exports","ResultCodesEnum","ResultCodeForCapcthaEnum","instance","axios","create","withCredentials","baseURL","headers","dialogsAPI","get","response","data","userId","page","count","message","post","body","GET_OPPONENTS","GET_DIALOG_WITH_OPPONENT","SET_CURRENT_OPPONENT_ID","initialState","opponents","messages","currentOpponent","actionCreators","getOpponents","type","getDialogWithOpponent","items","setCurrentOpponent","opponent","getDialogsOpponents","dispatch","a","sendMessage","resultCode","dialogsReducer","state","action","profileAPI","then","res","status","put","photoFile","formData","FormData","append","profile","posts","id","fullName","likesCount","newPostText","actions","addPostActionCreator","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","getStatus","updateStatus","savePhoto","file","Success","saveProfile","getState","auth","Error","stopSubmit","_error","Promise","reject","profileReducer","newPost","filter","p","newsAPI","categories","join","SET_NEWS","TOGGLE_FETCHING","TOGGLE_IS_CONTENT","SET_NEXT_PAGE","TOGGLE_SCROLL_FETCHING","SET_CATEGORIES","SET_NEWS_BY_CATEGORY","news","isFetching","hasContent","nextPage","scrollFetching","catregories","setNews","toggleFetching","bool","getContent","setNextPage","setScrollFetching","setCategories","setNewsByCategory","getNewsThunk","results","getNewsByCategory","newsReducer","includes","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","payload","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","chatReducer","GET_FOLLOWED_FRIENDS","friends","totalFriends","getFollowedFriends","usersAPI","getFriends","totalCount","friendsReducer","Preloader","props","SelectorUsers","usersPage","users","getPageSize","pageSize","getCurrentPage","currentPage","getFollowingInProgress","followingInProgress","getUsersFilter","getIsAuth","isAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authAPI","email","password","rememberMe","captcha","delete","securityAPI","login","captchaUrl","getAuthUserData","meData","getCaptchaUrl","url","logout","authReducer","sidebarReducer","initialized","appReducer","defaultState","isTime","TimeReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","friendsSection","newsPage","userReducer","form","formReducer","app","chat","time","store","createStore","applyMiddleware","thunkMiddleware","window","useStyles","makeStyles","theme","nav","backgroundColor","palette","background","header","boxShadow","padding","borderRadius","marginBottom","fontSize","color","textDecoration","fontFamily","display","button","item","alignItems","cursor","marginRight","Navbar","classes","Box","className","to","Header","useTheme","colorMode","React","ColorModeContext","sx","bgcolor","Logo","LogoSVG","viewBox","xmlns","transform","d","IconButton","ml","onClick","toggleColorMode","mode","HeaderContainer","this","Component","connect","width","height","text","paper","border","justifyContent","buttonHover","userID","primary","auxiliary","UserName","marginTop","fontWeight","User","user","unfollowThunk","followThunk","log","UserElem","src","small","userPhoto","alt","name","followed","disabled","some","UserNavbar","useSelector","enableReinitialize","initialValues","term","friend","validate","values","onSubmit","setSubmitting","onFilterChenged","isSubmitting","as","size","multiple","value","SearchText","boxShadowSearch","search","paddingLeft","margin","lineHeight","boxSizing","resize","outline","usersNuvbar","verticalAlign","overflow","usersSearchFormValidate","UsersSearchForm","memo","Grid","container","xs","placeholder","autocomplete","userContainer","flexDirection","Users","useDispatch","history","useHistory","location","useLocation","useEffect","parsed","require","actualPage","actualFilter","Number","getUsers","query","String","pathname","followw","unfolloww","map","u","UsersPage","required","LoginForm","paddingBottom","formError","LoginReduxForm","reduxForm","handleSubmit","createField","Input","LoginPage","loginData","CaptchaIsRequired","length","MaterialUISwitch","styled","Switch","backgroundImage","encodeURIComponent","opacity","content","position","left","top","backgroundRepeat","backgroundPosition","sleep","ms","resolve","ThemeSwitch","useContext","sell","alert","stringify","setFieldValue","checked","onChange","event","GreenSwitch","pink","alpha","hoverOpacity","Time","Date","toLocaleString","hour","minute","intervalID","setInterval","tick","clearInterval","setState","sss","userSelect","breakpoints","between","TimeSwitch","localStorageRef","localStorage","getItem","setItem","label","inputProps","showTime","newLocal","useCallback","defaultChecked","Clock","ExitButton","settingsContainer","Setings","DialogsContainer","lazy","ProfileContainer","ChatPage","NewsContainer","SchoolContainer","PageHTML1","PageHTML2","PageHTML3","PageCSS1","PageCSS2","PageCSS3","PageJs1","PageJs2","PageJs3","App","catcAllUnhandledErrors","reason","promise","initializeApp","style","maxWidth","spacing","fallback","exact","from","path","render","pageTitle","compose","withRouter","all","MyApp","setMode","prevMode","createTheme","default","buttonEnd","backgroundHover","blockCode","borderBottom","borderLeft","borderRight","secondary","hover","school","ol","tegMain","tegSupport","createStyles","GlobalStyles","Provider","ThemeProvider","ReactDOM","StrictMode","document","getElementById","searchUser","follow","unfollow","updateObjectInArray","itemId","objPropName","newObjProps","totalUsersCount","followUnfollowFlow","apiMethod","actionCreater","bind","FormControl","input","meta","touched","children","hasError","FormsControl","Textarea","restProps","child","validators","component"],"mappings":"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","file":"static/js/main.b9ed3130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2UdzG\",\"currentTime\":\"Header_currentTime__2TIaV\",\"Logo\":\"Header_Logo__2eXxL\",\"LogoSVG\":\"Header_LogoSVG__3Tn0X\",\"loginBlock\":\"Header_loginBlock__1vKTq\",\"HeaderRigth\":\"Header_HeaderRigth__x_-IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormsControl\":\"FormsControls_FormsControl__1Jt58\",\"error\":\"FormsControls_error__8u9-w\",\"formSummaryError\":\"FormsControls_formSummaryError__2aZUP\"};","import axios from \"axios\";\r\nimport { UserType } from \"../type/types\";\r\n// axios.create - создаёт экземпляр axios с настраиваемой конфигурацией.\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: { \"API-KEY\": \"a0450db5-9e30-42e8-a82d-905ff590711b\" },\r\n//   headers: { \"API-KEY\": \"09df6509-62f8-480a-9c44-6768947e03b4\" },\r\n});\r\n\r\n//Подсказка\r\nexport enum ResultCodesEnum {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\nexport enum ResultCodeForCapcthaEnum {\r\n  CaptchaIsRequired = 10,\r\n}\r\n//\r\nexport type GetItemsType = {\r\n  items: Array<UserType>;\r\n  totalCount: number;\r\n  error: string | null;\r\n};\r\n// jenerik\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n  data: D;\r\n  messages: Array<string>;\r\n  resultCode: RC;\r\n};\r\n\r\nexport type TResponseData<D = {}> = {\r\n    data: D\r\n    resultCode: number\r\n    messages: string[]\r\n}","import { instance } from \"./api\"\r\n\r\nexport const dialogsAPI = {\r\n    async getDialogsOpponents() {\r\n        const response = await instance.get<TOpponent[]>('dialogs')\r\n        return response.data\r\n    },\r\n    async getDialogWithOpponent(userId: number, page?: number, count?: number) {\r\n        const response = await instance.get<{items: TOpponentMessages[]}>(`dialogs/${userId}/messages?page=${page}&count=${count}`)\r\n        return response.data\r\n    },\r\n    async sendUserMessage(userId: number, message: string) {\r\n        const response = await instance.post<TOpponentMessages>(`dialogs/${userId}/messages`, { body: message })\r\n        return response.data\r\n    },\r\n    async getMessagesFromUser(userId: number) {\r\n        const response = await instance.get<TOpponent[]>(`dialogs/${userId}/messages`)\r\n        return response.data\r\n    },\r\n    async startDialog(userId: number) {\r\n        const response = await instance.post<TOpponentMessages>(`dialogs/${userId}`)\r\n        return response.data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type TOpponent = {\r\n    id: number\r\n    userName: string\r\n    hasNewMessages: boolean\r\n    lastDialogActivityDate: string\r\n    lastUserActivityDate: string\r\n    newMessagesCount: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\nexport type TOpponentMessages = {\r\n    id: string\r\n    body: string\r\n    translatedBody: null | string\r\n    addedAt: string\r\n    senderId: number\r\n    senderName: string\r\n    recipientId: number\r\n    viewed: boolean\r\n    resultCode: number\r\n}","import { dialogsAPI, TOpponent, TOpponentMessages } from '../api/dialogs'\r\nimport { TThunkAction } from '../type/types'\r\nimport { TReturnActionType } from './reduxStore'\r\n\r\nconst GET_OPPONENTS = 'dialogs/GET-OPPONENTS'\r\nconst GET_DIALOG_WITH_OPPONENT = 'dialogs/GET-DIALOG-WITH-OPPONENT'\r\nconst SET_CURRENT_OPPONENT_ID = 'dialogs/SET-CURRENT-OPPONENT-ID'\r\n// const SEND_MESSAGE = 'dialogs/SEND-MESSAGE'\r\n\r\nconst initialState = {\r\n    opponents: [] as TOpponent[],\r\n    messages: [] as TOpponentMessages[],\r\n    currentOpponent: {} as TOpponent\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: TAction): TState => { \r\n    switch (action.type) {\r\n        case GET_OPPONENTS:\r\n            return {\r\n                ...state,\r\n                opponents: [...action.data]\r\n            }\r\n        case GET_DIALOG_WITH_OPPONENT:\r\n            return {\r\n                ...state,\r\n                messages: [...action.items]\r\n            }\r\n        case SET_CURRENT_OPPONENT_ID:\r\n            return {\r\n                ...state,\r\n                currentOpponent: action.opponent\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionCreators = {\r\n    getOpponents: (data: TOpponent[]) => ({ type: GET_OPPONENTS, data } as const),\r\n    getDialogWithOpponent: (items: TOpponentMessages[]) => ({ type: GET_DIALOG_WITH_OPPONENT, items } as const),\r\n    setCurrentOpponent: (opponent: TOpponent) => ({ type: SET_CURRENT_OPPONENT_ID, opponent } as const)\r\n}\r\n\r\nexport const getDialogsOpponents = (): TThunk => async (dispatch) => {\r\n    const data: TOpponent[] = await dialogsAPI.getDialogsOpponents()\r\n    dispatch(actionCreators.getOpponents(data))\r\n}\r\n\r\nexport const getDialogWithOpponent = (userId: number): TThunk => async (dispatch) => {    \r\n    const data = await dialogsAPI.getDialogWithOpponent(userId)\r\n    dispatch(actionCreators.getDialogWithOpponent(data.items))\r\n}\r\n\r\nexport const sendMessage = (userId: number, message: string): TThunk => async (dispatch) => {\r\n    const data = await dialogsAPI.sendUserMessage(userId, message)\r\n    data.resultCode === 0 && dispatch(getDialogWithOpponent(userId))\r\n}\r\n\r\nexport const startDialog = (userId: number): TThunk => async (dispatch) => {\r\n    const data = await dialogsAPI.startDialog(userId)\r\n    data.resultCode === 0 && dispatch(getDialogsOpponents())\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\ntype TState = typeof initialState\r\ntype TAction = TReturnActionType<typeof actionCreators>\r\ntype TThunk = TThunkAction<TAction>\r\n\r\n\r\n// import { TReturnActionType } from \"./reduxStore\";\r\n\r\n// type DialogsType = {\r\n//     id: number\r\n//     icon: null\r\n//     name: string\r\n// }\r\n// type MessagesType = {\r\n//     id: number\r\n//     message:string \r\n// }\r\n\r\n// //state\r\n// let initialState = {\r\n//     dialogs: [\r\n//         { id: 1, icon: null, name: \"Вячеслав Елдышов\" },\r\n//         { id: 2, icon: null, name: \"Ivan Agapov\" },\r\n//         { id: 3, icon: null, name: \"Катя Ефимова\" },\r\n//         { id: 4, icon: null, name: \"Иван Бобров\" },\r\n//         { id: 5, icon: null, name: \"СберКот\" },\r\n//     ] as Array<DialogsType>,\r\n//     messages: [\r\n//         { id: 1, message: \"1\" },\r\n//         { id: 2, message: \"2\" },\r\n//         { id: 3, message: \"3\" },\r\n//         { id: 4, message: \"4\" },\r\n//         { id: 5, message: \"5\" },\r\n//     ] as Array<MessagesType>,\r\n// };\r\n\r\n// //Reducer\r\n// const dialogsReducer = (state = initialState, action:ActionsType):InitialStateType => {\r\n//     switch (action.type) {\r\n//         // Отправить сообщение\r\n//         case \"SEND-MESSAGE\": {\r\n//             let body = action.newMessageBody;\r\n//             return {\r\n//                 ...state,\r\n//                 messages: [...state.messages, { id: 6, message: body }],\r\n//             }\r\n//         }\r\n\r\n//         default:\r\n//         return state;\r\n//     }\r\n// };\r\n\r\n// export const actions = {\r\n//     sendMessage: (newMessageBody:string) => ({ type: \"SEND-MESSAGE\", newMessageBody } as const)\r\n// }\r\n\r\n// export default dialogsReducer\r\n\r\n// export type InitialStateType = typeof initialState\r\n// type ActionsType = TReturnActionType<typeof actions>\r\n\r\n","import { PhotosType, ProfileType } from '../type/types';\r\nimport { instance, ResponseType } from \"./api\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\n//  Profile\r\nexport const profileAPI = {\r\n    getProfile  (userId:number) {return instance.get <ProfileType>(`profile/` + userId).then(res => res.data)},\r\n    getStatus   (userId:number) {return instance.get <string>('profile/status/' + userId).then(res => res.data)},\r\n    updateStatus(status:string) {return instance.put <ResponseType>('profile/status', { status: status}).then(res => res.data)},\r\n    savePhoto(photoFile:any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put<ResponseType<SavePhotoResponseDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n         }).then(res => res.data)\r\n    },\r\n    saveProfile(profile: File){\r\n        return instance.put<ResponseType>('profile', profile).then(res => res.data)\r\n    }\r\n    \r\n};","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { PhotosType, PostType, ProfileType } from \"../type/types\";\r\nimport { BaseThunkType, TReturnActionType } from \"./reduxStore\";\r\n\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { ResultCodesEnum } from \"../api/api\";\r\n\r\n// kolhoz state\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, fullName: null, message: \"Привет мир!\", likesCount: 12 },\r\n  ] as Array<PostType>,\r\n  \r\n  profile: null as ProfileType|null,\r\n  status: '',\r\n  newPostText: ''\r\n};\r\n\r\n// Reducer\r\nconst profileReducer = (state = initialState, action:ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        // Добавить запись\r\n        case \"SN/PROFILE/ADD-POST\": {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n                fullName:action.fullName,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\",\r\n            }\r\n        }\r\n        //  DELETE_POST\r\n        case  \"SN/PROFILE/DELETE_POST\": return{...state, posts: state.posts.filter(p=> p.id !== action.postId)}\r\n        \r\n        // Получить профиль пользователя\r\n        case \"SN/PROFILE/SET_USER_PROFILE \": return{...state, profile: action.profile}\r\n        \r\n        // Получить статус пользователя\r\n        case \"SN/PROFILE/SET_STATUS \": return{...state,status: action.status}\r\n\r\n        //\r\n        case \"SN/PROFILE/SAVE_PHOTO_SUCCESS\": return{...state,profile:{...state.profile, photos: action.photos} as ProfileType}\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText:string, fullName:string) => ({ type: \"SN/PROFILE/ADD-POST\", newPostText, fullName } as const),\r\n    setUserProfile: (profile:ProfileType) => ({ type: \"SN/PROFILE/SET_USER_PROFILE \", profile} as const),\r\n    setStatus: (status:string) => ({ type: \"SN/PROFILE/SET_STATUS \", status} as const),\r\n    deletePost: (postId:number) => ({type:  \"SN/PROFILE/DELETE_POST\", postId} as const),\r\n    savePhotoSuccess:(photos:PhotosType) => ({type:  \"SN/PROFILE/SAVE_PHOTO_SUCCESS\", photos} as const)\r\n}\r\n\r\n// Получить профиль\r\nexport const getUserProfile = (userId:number):ThunkType =>\r\n async (dispatch) => {\r\n    // В response будет сидеть результат которым зарезолвится промис\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\n//  Получаем статус\r\nexport const getStatus = (userId:number):ThunkType =>\r\n async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\n// Изменяем статус\r\nexport const updateStatus = (status:string):ThunkType =>\r\n async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0){\r\n        dispatch(actions.setStatus(status))\r\n    }\r\n}\r\n\r\n// Изменяем фото профиля\r\nexport const savePhoto = (file:File):ThunkType =>\r\n async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file);\r\n\r\n    if (data.resultCode === ResultCodesEnum.Success){\r\n        dispatch(actions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\n// Изменяем фото профиля\r\nexport const saveProfile = (profile:File):ThunkType =>\r\n async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n\r\n    if (data.resultCode === ResultCodesEnum.Success){\r\n        if (userId != null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    }else{\r\n        // dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {\"facebook\": response.data.messages[0]} }));\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = TReturnActionType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction> //FormAction позволяет диспатчить санки\r\n","export default __webpack_public_path__ + \"static/media/user.33c53d9a.png\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://newsdata.io/api/1/'\r\n})\r\nconst apiKey = '&apikey=pub_72775a162ae6df41a64282b01f2e459454a2'\r\n\r\nexport const newsAPI = {\r\n    async getNews(page: number, categories?: TCategory[]) {\r\n        const response = await instance.get<TNewsData>(`news?country=ru${apiKey}&category=${categories?.join()}&page=${page}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\n\r\nexport type TNewsData = {\r\n    status: string\r\n    totalResults: number\r\n    results: TNews[]\r\n    nextPage: number\r\n}\r\n\r\nexport type TNews = {\r\n    title:      string\r\n    link:       string\r\n    keywords:   null | string[]\r\n    creator:    null | string[]\r\n    video_url:  null | string\r\n    description:null | string\r\n    content:    null | string\r\n    pubDate:    string\r\n    image_url:  null | string\r\n    source_id:  null | string\r\n    country:    null | string[]\r\n    category:   null | string[]\r\n    language:   null | string\r\n}\r\n\r\nexport type TCategory = 'sports' | 'technology' | 'top'","import { ThunkAction } from 'redux-thunk';\r\nimport { newsAPI, TCategory } from \"../../api/newsAPI\";\r\nimport { TNews } from '../../api/newsAPI';\r\nimport { TThunkAction } from '../../type/types';\r\nimport { TGlobalState, TReturnActionType } from '../reduxStore';\r\n\r\nconst SET_NEWS = 'news/SET-NEWS',\r\n    TOGGLE_FETCHING = 'news/TOGGLE-FETCHING',\r\n    TOGGLE_IS_CONTENT = 'news/TOGGLE-IS-CONTENT',\r\n    SET_NEXT_PAGE = 'news/SET-NEXT-PAGE',\r\n    TOGGLE_SCROLL_FETCHING = 'news/TOGGLE-SCROLL-FETCHING',\r\n    SET_CATEGORIES = 'news/SET-CATEGORIES',\r\n    SET_NEWS_BY_CATEGORY = 'news/SET-NEWS-BY-CATEGORY'\r\n\r\nconst initialState = {\r\n    news: [] as TNews[],\r\n    isFetching: true,\r\n    hasContent: [] as string[],\r\n    nextPage: 1,\r\n    scrollFetching: true,\r\n    catregories: ['technology'] as TCategory[]\r\n}\r\n\r\nconst newsReducer = (state = initialState, action: TAction): TState => {\r\n    switch (action.type) {\r\n        case SET_NEWS:\r\n            return {\r\n                ...state,\r\n                news: [...state.news, ...action.news]\r\n            }\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.bool\r\n            }\r\n        case TOGGLE_IS_CONTENT:\r\n            return {\r\n                ...state,\r\n                hasContent: !state.hasContent.includes(action.id)\r\n                    ? [...state.hasContent, action.id]\r\n                    : state.hasContent.filter(id => id !== action.id)\r\n            }\r\n        case SET_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                nextPage: action.page\r\n            }\r\n        case TOGGLE_SCROLL_FETCHING:\r\n            return {\r\n                ...state,\r\n                scrollFetching: action.bool\r\n            }\r\n        case SET_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                catregories: action.categories\r\n            }\r\n        case SET_NEWS_BY_CATEGORY:\r\n            return {\r\n                ...state,\r\n                news: action.news\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionCreators = {\r\n    setNews: (news: TNews[]) => ({ type: SET_NEWS, news } as const),\r\n    toggleFetching: (bool: boolean) => ({ type: TOGGLE_FETCHING, bool } as const),\r\n    getContent: (id: string) => ({ type: TOGGLE_IS_CONTENT, id } as const),\r\n    setNextPage: (page: number) => ({ type: SET_NEXT_PAGE, page } as const),\r\n    setScrollFetching: (bool: boolean) => ({ type: TOGGLE_SCROLL_FETCHING, bool } as const),\r\n    setCategories: (categories: TCategory[]) => ({ type: SET_CATEGORIES, categories } as const),\r\n    setNewsByCategory: (news: TNews[]) => ({ type: SET_NEWS_BY_CATEGORY, news } as const)\r\n}\r\n\r\nexport const getNewsThunk = (page: number, categories: TCategory[]): TThunk => async (dispatch) => {\r\n    const data = await newsAPI.getNews(page, categories)\r\n    dispatch(actionCreators.setNews(data.results))\r\n    dispatch(actionCreators.setNextPage(data.nextPage))\r\n    dispatch(actionCreators.setScrollFetching(false))\r\n    dispatch(actionCreators.toggleFetching(false))\r\n}\r\n\r\nexport const getNewsByCategory = (categories: TCategory[]): TThunk => async (dispatch) => {\r\n    const data = await newsAPI.getNews(1, categories)\r\n    dispatch(actionCreators.setNewsByCategory(data.results))\r\n    dispatch(actionCreators.setNextPage(data.nextPage))\r\n    dispatch(actionCreators.setScrollFetching(false))\r\n    dispatch(actionCreators.toggleFetching(false))\r\n}\r\n\r\nexport const getContent = (id: string): TThunkAction<TAction, void> => (dispatch) => {\r\n    return dispatch(actionCreators.getContent(id))\r\n}\r\n\r\nexport default newsReducer;\r\n\r\ntype TState = typeof initialState\r\ntype TAction = TReturnActionType<typeof actionCreators>\r\ntype TThunk = ThunkAction<Promise<void>, TGlobalState, unknown, TAction>\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'","// import { Dispatch } from 'redux';\r\n// import { stopSubmit } from \"redux-form\";\r\n// import { BaseThunkType, TReturnActionType } from \"./reduxStore\";\r\n// import { chatAPI, ChatMessageType, statusType } from \"../api/chat-api\";\r\n\r\n// // State\r\n// let initialState = {\r\n//     messages: [] as ChatMessageType[],\r\n//     status: 'pending' as statusType\r\n// };\r\n\r\n// // Reducer\r\n// export const chatReducer = (state = initialState, action:ActionsType): InitialStateType => {\r\n//      switch (action.type) {\r\n//         //Получаем данные о пользователе \r\n//         case \"SN/chat/MESSAGES_RECEVIED\":\r\n//             return {\r\n//                 ...state,\r\n//                 messages: [...state.messages, ...action.payload.messages ]\r\n//             }\r\n//         case \"SN/chat/STATUS_CHANGED\":\r\n//             return {\r\n//                 ...state,\r\n//                 status: action.payload.status\r\n//             }\r\n//         default: return state\r\n//     }\r\n// }\r\n\r\n// // Actions\r\n// export const actions = {\r\n//     messagesReceived: (messages: ChatMessageType[]) => ({ \r\n//         type: \"SN/chat/MESSAGES_RECEVIED\", \r\n//         payload:{messages} \r\n//     } as const),\r\n//     statusChenged: (status: statusType) => ({ \r\n//         type: \"SN/chat/STATUS_CHANGED\", \r\n//         payload:{status} \r\n//     } as const),\r\n// }\r\n\r\n// // HOK\r\n// let _newMessageHandler: ((messages: ChatMessageType[]) => void) | null = null // _Приватное поле\r\n// const newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n//     if (_newMessageHandler === null) {\r\n//         _newMessageHandler = (messages) => {\r\n//             dispatch(actions.messagesReceived(messages))\r\n//         }\r\n//     }\r\n//     return _newMessageHandler\r\n// }\r\n// let _statusChengedHandler: ((status: statusType) => void) | null = null\r\n// const statusChengedHandlerCreator = (dispatch: Dispatch) => {\r\n//     if (_statusChengedHandler === null) {\r\n//         _statusChengedHandler = (status) => {\r\n//             dispatch(actions.statusChenged(status))\r\n//         }\r\n//     }\r\n//     return _statusChengedHandler\r\n// }\r\n// // Thank \r\n// export const startMessagesListenung = ():ThunkType => async (dispatch) =>{\r\n//     chatAPI.start()\r\n//     chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n//     chatAPI.subscribe('status-chenged', statusChengedHandlerCreator(dispatch))\r\n// }\r\n\r\n// export const stoptMessagesListenung = ():ThunkType => async (dispatch) =>{\r\n//     chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n//     chatAPI.unsubscribe('status-chenged', statusChengedHandlerCreator(dispatch))\r\n//     chatAPI.stop()\r\n// }\r\n\r\n// export const seendMessage = (message: string):ThunkType => async (dispatch) =>{\r\n//     chatAPI.sendMessage(message)\r\n// }\r\n\r\n// // export\r\n// export default initialState;\r\n\r\n// // Type\r\n// type InitialStateType = typeof initialState\r\n// type ActionsType = TReturnActionType<typeof actions>\r\n// type ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>\r\n\r\n\r\nimport {BaseThunkType, TReturnActionType} from './reduxStore'\r\nimport {Dispatch} from 'redux'\r\nimport {FormAction} from 'redux-form/lib/actions'\r\nimport {chatAPI, ChatMessageAPIType, StatusType} from '../api/chat-api'\r\n\r\n\r\ntype ChatMessageType = ChatMessageAPIType \r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType,\r\n    isFetching: true\r\n}\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/chat/MESSAGES_RECEVIED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages],\r\n                isFetching: false\r\n            }\r\n        \r\n        case 'MESSAGES_REMOVED':\r\n            return {\r\n                ...state,\r\n                messages: [],\r\n                isFetching: true\r\n            }\r\n        case 'SN/chat/STATUS_CHANGED':\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\r\n        type: 'SN/chat/MESSAGES_RECEVIED', payload: {messages}\r\n    } as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: 'SN/chat/STATUS_CHANGED', payload: {status}\r\n    } as const),\r\n    messagesRemoved: () => ({type: 'MESSAGES_REMOVED'} as const),\r\n\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(actions.messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n    dispatch(actions.messagesRemoved())\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatReducer\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = TReturnActionType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import { TThunkAction, TUser } from \"../../type/types\";\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport { TReturnActionType } from \"../reduxStore\";\r\n\r\nconst GET_FOLLOWED_FRIENDS = 'friends/GET-FOLLOWED-FRIENDS'\r\n\r\nconst initialState = {\r\n    friends: [] as TUser[],\r\n    totalFriends: 0\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action: TAction): TState => {\r\n    switch (action.type) {\r\n        case (GET_FOLLOWED_FRIENDS):\r\n            return ({\r\n                ...state,\r\n                friends: action.payload.friends,\r\n                totalFriends: action.payload.totalFriends\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionCreators = {\r\n    getFollowedFriendsAC: (friends: TUser[], totalFriends:number) => (\r\n        { type: GET_FOLLOWED_FRIENDS, payload: { friends, totalFriends } } as const)\r\n}\r\n\r\nexport const getFollowedFriends = ():TThunk => async (dispatch) => {\r\n    const data = await usersAPI.getFriends();\r\n    dispatch(actionCreators.getFollowedFriendsAC(data.items, data.totalCount))\r\n}\r\n\r\nexport default friendsReducer;\r\n\r\n\r\nexport type TState = typeof initialState\r\ntype TAction = TReturnActionType<typeof actionCreators>\r\ntype TThunk = TThunkAction<TAction>","import { CircularProgress } from '@mui/material';\r\n\r\nlet Preloader = (props) => {\r\n    return <CircularProgress />\r\n}\r\n\r\nexport default Preloader;","// Селектор это функция которая принимает state целиком и из этого стейта чего-то достаёт\r\nimport { TGlobalState } from \"./reduxStore\";\r\n\r\nexport const SelectorUsers = (state:TGlobalState) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:TGlobalState) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state:TGlobalState) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state:TGlobalState) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state:TGlobalState) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state:TGlobalState) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nexport const getUsersFilter = (state:TGlobalState) => {\r\n    return state.usersPage.filter\r\n}\r\nexport const getUsersFriend = (state:TGlobalState) => {\r\n    return state.usersPage.filter.friend\r\n}\r\nexport const getIsAuth = (state:TGlobalState) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getLogin = (state:TGlobalState) => {\r\n    return state.auth.login\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { instance, ResponseType, ResultCodesEnum, ResultCodeForCapcthaEnum } from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id:number\r\n    email:string\r\n    login:string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId:number\r\n}\r\ntype LogoutResponseType = {\r\n    date: any\r\n}\r\n//  auth - авторизация\r\nexport const authAPI = {\r\n    me(){return instance.get<ResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)},\r\n    login(email:string, password:string, rememberMe = false, captcha = null) {\r\n        return instance.post<ResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCapcthaEnum>>(`auth/login`, {email, password, rememberMe,captcha })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {return instance.delete<ResponseType<LogoutResponseType>>(`auth/login`)\r\n            .then(res => res.data)\r\n    },\r\n};\r\n","import { instance } from \"./api\"\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url:string\r\n }\r\n export const securityAPI = {\r\n     getCaptchaUrl() {\r\n         return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n     }\r\n }","import { ResultCodeForCapcthaEnum, ResultCodesEnum} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { BaseThunkType, TReturnActionType } from \"./reduxStore\";\r\nimport { authAPI } from '../api/auth-api';\r\nimport { securityAPI } from '../api/security-api';\r\n\r\nlet initialState = {\r\n    userId:null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as null|string\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state = initialState, action:ActionsType): InitialStateType => {\r\n     switch (action.type) {\r\n        //Получаем данные о пользователе \r\n        case \"SN/auth/SET_USER_DATA\":\r\n            case \"SN/auth/GET_CAPTCHA_URL_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId:number|null, email:string|null, login:string|null, isAuth:boolean ) => ({ \r\n        type: \"SN/auth/SET_USER_DATA\", \r\n        payload:{userId, email, login, isAuth} \r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl:string) => ({\r\n        type: \"SN/auth/GET_CAPTCHA_URL_SUCCESS\", payload: {captchaUrl}\r\n    } as const)\r\n}\r\n\r\n// Thank - функция которая делает ассинхронную операцию и которая делает дисптчи\r\n// Получаем данные о пользователе \r\n\r\nexport const getAuthUserData = ():ThunkType =>\r\n async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n    if (meData.resultCode === ResultCodesEnum.Success) {        \r\n        let {id, email, login} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n// Логинемся\r\nexport const login = (email:string, password:string, rememberMe:boolean, captcha:null):ThunkType =>\r\n async (dispatch) => {\r\n    let loginData = await authAPI.login(email, password, rememberMe,captcha);\r\n\r\n    if (loginData.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    }\r\n    else{\r\n        if (loginData.resultCode === ResultCodeForCapcthaEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl())\r\n        }   \r\n        let message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\"; \r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n// Капча\r\nexport const getCaptchaUrl = ():ThunkType => \r\n  async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n// Вылогиневаемся\r\nexport const logout = ():ThunkType =>\r\n async (dispatch) => {\r\n    let logoutData = await authAPI.logout();\r\n    if (logoutData.resultCode === ResultCodesEnum.Success) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport default authReducer;\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = TReturnActionType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | ReturnType<typeof stopSubmit>>","let initialState = {}\r\ntype InitialStateType = typeof initialState \r\nconst sidebarReducer = (state = initialState, action:any):InitialStateType => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { TReturnActionType } from './reduxStore';\r\nimport { getAuthUserData } from \"./auth-reducer\"\r\n\r\n// state\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n//\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = TReturnActionType<typeof actions>\r\n// Reducer\r\nconst appReducer = (state = initialState, action:ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APPINITIALIZED_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            initialized: true\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n//\r\nexport const actions = {\r\n    initializedSuccess: () => ({ type: \"APPINITIALIZED_SUCCESS\"} as const)\r\n}\r\n\r\n\r\n// Thank - функция которая делает ассинхронную операцию и которая делает дисптчи\r\n// Диспатчим Авторизованного пользователя\r\nexport const  initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]) \r\n    .then(() => {\r\n    dispatch(actions.initializedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;\r\n","\r\n\r\nconst defaultState ={\r\n    isTime: true | []\r\n}\r\n\r\nconst TimeReducer = (state = defaultState, action) => {\r\n    switch (action.type){\r\n        case \"UPDATE_TIME\":\r\n            return {\r\n                ...state, isTime: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TimeReducer","import { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport userReducer from \"./user-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport appReducer from \"./app-reducer\";\r\nimport TimeReducer from './time-reducer';\r\nimport chatReducer from \"./chat-reducer\";\r\nimport friendsReducer from \"./reducers/friendsReducer\";\r\nimport newsReducer from \"./reducers/newsReducer\";\r\n\r\n//combineReducers. Это метод, который позволяет вместо того, чтобы создавать один огромный reducer для всего состояния приложения сразу, разбивать его на отдельные модули.\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar:     sidebarReducer,\r\n    friendsSection: friendsReducer,\r\n    newsPage:    newsReducer,\r\n    usersPage:   userReducer,\r\n    auth:        authReducer,\r\n    form:        formReducer,\r\n    app:         appReducer,\r\n    chat:        chatReducer,\r\n    time:        TimeReducer\r\n})\r\n\r\n\r\ntype RootReducerType = typeof rootReducer // (globalstate: AppDtateType) => TGlobalState\r\n//экспортируем весь тип состояния приложения\r\nexport type TGlobalState = ReturnType<RootReducerType>\r\n// общий тип для Actions\r\nexport type TReturnActionType<T> = T extends {[key: string]: (...args: any[])=> infer U} ? U : never\r\n// базовый тип для санок\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, TGlobalState, unknown, A>\r\n\r\n// createStore - Создает Redux стор которое хранит полное дерево состояния приложения. Оно должно быть единственным стором в приложении.\r\n//\r\n// Параметры:\r\n//   1.reducer (Function): Функция редюсера которая возвращает дерево состояния, принимая текущее состояние и экшен к обработке.\r\n//   2.applyMiddleware(thunkMiddleware) - дял поддержки store асинхронных экшенов \r\n// Возвращает:\r\n//   (Store): объект, который содержит полное состояние приложения.\r\n//   Единственный способ изменить его состояние — путем отправки экшенов. \r\n//   Можем также подписаться на изменения его состояния, чтобы обновить пользовательский интерфейс.\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n //@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import { Box } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@mui/styles';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\nnav: {\r\n\tbackgroundColor: theme.palette.background.header,\r\n\tboxShadow: theme.palette.boxShadow,\r\n\tpadding: '10px',\r\n\tborderRadius:'20px',\r\n\tmarginBottom: '15px',\r\n\tfontSize: '1.2em',\r\n\r\n\t'& > a':{\r\n\t\tcolor:'#B3B3B3',\r\n\t\ttextDecoration: 'none',\r\n\t\tfontFamily: 'Arial',\r\n\t},\r\n\t'& > a:hover':{\r\n\t\tdisplay: 'block',\r\n\t\tbackgroundColor: theme.palette.background.button,\r\n  \t\tcolor: 'white',\r\n  \t\tborderRadius: '10px',\r\n\t},\r\n},\r\n  \r\nitem:{\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tpadding: '10px',\r\n\tcursor: 'pointer',\r\n\r\n\t'& > svg':{\r\n\t\tmarginRight: '12px'\r\n\t}\r\n}\r\n}));\r\n\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n    return <>\r\n    <Box className={classes.nav}>\r\n\r\n    <NavLink to=\"/profile\">\r\n    <div className={classes.item}>\r\n    <AccountCircleIcon />\r\n    Profile </div> </NavLink>\r\n\r\n    <NavLink to=\"/school\">\r\n    <div className={classes.item}>\r\n    <SchoolIcon />\r\n    School </div> </NavLink>\r\n\r\n    <NavLink to=\"/dialogs\">\r\n    <div className={classes.item}>\r\n    <ChatIcon />\r\n    Messages </div> </NavLink>\r\n    \r\n    <NavLink to=\"/users\" >\r\n    <div className={classes.item}>\r\n    <PeopleAltIcon />\r\n    Friends </div> </NavLink>\r\n\r\n    <NavLink to=\"/chat\" >\r\n    <div className={classes.item}>\r\n\t<ForumIcon />\r\n    Forum </div> </NavLink>\r\n\r\n    <NavLink to=\"/news\" >\r\n    <div className={classes.item}>\r\n\t<NewspaperIcon />\r\n    News </div> </NavLink>\r\n\r\n    <NavLink to=\"/settings\" >\r\n    <div className={classes.item}>\r\n\t<SettingsIcon />\r\n    Settings </div> </NavLink>\r\n\r\n  </Box>\r\n  </>\r\n}\r\n\r\nexport default Navbar;\r\n","// import UserSmallPhotoContainer from 'commponents/Common/UserSmallPhoto/UserSmallPhotoContainer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nimport * as React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\n\r\nimport { ColorModeContext } from '../../MyApp';\r\n\r\n\r\nconst Header = (props) => {\r\n   \r\n    const theme = useTheme();\r\n    const colorMode = React.useContext(ColorModeContext);\r\n\r\nreturn <Box className={s.header} sx={{bgcolor: 'background.header'}}>  \r\n    <NavLink to=\"/profile\">\r\n    <div className={s.Logo}>\r\n            <div className={s.LogoSVG}><svg clip-rule=\"evenodd\" fill-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"2\" viewBox=\"0 0 400 400\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" transform=\"matrix(.970286 0 0 .970286 155.473 65)\"><path d=\"m127.8 8.9c10.6-1.2 20.2-6.1 30.5-8.9 1.4 2.8 3.1 6.2 6.8 6.2 3.7.6 5.8-3 7.5-5.7 8.9 3.5 17.1 8.4 26.2 11.4 4.7 1.6 10.4 1.3 14 5.3 4.3 4.7 4.4 11.5 3.7 17.4-.9 4.7-3.6 9.7-8.6 10.9-4.8 1.2-9.6 2-14.1 4-7.3 2.9-14 7.4-21.7 9.5-1-1.8-2.1-3.5-3.2-5.3-2.3 0-4.8-.2-6.9 1-1.4 1.2-2.3 2.9-3.3 4.4-11.2-.6-21.2-7.2-32.5-7-11.7.2-23.3 3-33.9 7.9-23 9.1-41.6 27.8-51.9 50.2-5.6 12.5-9.1 26-9.6 39.7-.4 23.5 6.7 47.4 21.1 66.1 6.9 10 16.2 18.2 26.2 25 21.2 14.9 48.3 20.4 73.9 17.3 31.2-3.7 60.4-21.6 77.9-47.7 11.7-16.3 18.2-35.9 19.7-55.8 1.8-15.8-.9-31.8-5.8-46.8-3.8-12.3-10.5-23.5-18.2-33.7-3.9-5.4-8.8-9.8-13.4-14.5 9.2 6.7 16.8 15.3 23.2 24.7 11.6 16.4 18.4 35.9 20.9 55.8.6 12.5 1 25.2-1.9 37.4-4.9 25.1-18.1 48.4-36.7 65.9-9.1 9.3-20.3 16-31.7 22.1-11 5.4-22.9 9.3-35.1 10.8-24.9 4.2-51.1.9-74.1-9.7-4.8-2.4-9.4-5.2-14.1-7.7-18.5-11.5-34.4-27.5-45.2-46.4-9.7-18.2-16.9-38.1-17.5-58.7.1-10-.6-20 1.3-29.9 5.1-30.1 20.1-58.6 42.9-79 12.3-11.6 27-20.3 42.6-26.6 13-5.6 27-8.1 41-9.6z\"/><path d=\"m118.8 106.4c5.9-.8 12-.8 18 0 12.7 2.8 23.8 12 28.8 24.1 5.9 12.1 4.2 26.8-2.6 38.2-5.8 8.6-14.3 15.6-24.5 18.1-4.4.8-8.9 2.4-13.5 1.6-6.2-1-12.6-2.3-18-5.7-13.3-7.4-21.9-22.7-20.9-38 0-8.7 4-16.9 9.1-23.8 5.6-7.5 14.4-12.4 23.6-14.5z\"/></g></svg></div>\r\n            <div>AxiixA</div> \r\n    </div>\r\n    </NavLink>\r\n    \r\n    <Box sx={{color: 'text.paper'}}>\r\n      <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n        {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n      </IconButton>\r\n    </Box>\r\n</Box>\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n        '& > button':{\r\n            width: '120px',\r\n            height: '30px',\r\n         \r\n            backgroundColor: theme.palette.background.button,\r\n            color: theme.palette.text.paper,\r\n            borderRadius: '7px',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n        \r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        '& > svg':{\r\n            marginRight: '5px',\r\n        },\r\n        '& > button:hover':{\r\n            backgroundColor: theme.palette.background.buttonHover,\r\n            color: 'white',\r\n        }\r\n        \r\n    },\r\n    userID:{\r\n        color: theme.palette.text.primary, \r\n        marginBottom: '10px',\r\n\r\n        '& > span':{\r\n            color: theme.palette.text.auxiliary\r\n        }\r\n    },\r\n    UserName:{\r\n        marginTop: '10px',\r\n        marginBottom: '25px',\r\n        fontSize: '17px',\r\n        color: theme.palette.text.primary,\r\n        fontFamily: 'Arial',\r\n        fontWeight: '400',\r\n\r\n        '& :hover':{\r\n            cursor: 'pointer',\r\n            textDecoration:  'underline',\r\n        }\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollowThunk,followThunk}) => {\r\n    console.log(user);\r\nconst classes = useStyles();   \r\n\r\n    return <Box className={s.UserElem}>\r\n            {/* Фото/follow/unfollow */}\r\n                <Box>\r\n                {/* Жмякаем на мини фотографию, и переходим на профиль пользователя */}\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img \r\n                    src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                    alt=\"картинка\"\r\n                    className={s.userPhoto}\r\n                    />\r\n                </NavLink>\r\n                </Box>\r\n                <Box>  \r\n                    {/* Имя пользователя */}\r\n                    <Box>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <Box className={classes.UserName}>{user.name}</Box>\r\n                            {/* <Box className={classes.userID}><span >ID:</span> {user.id}</Box>  */}\r\n                        </NavLink>\r\n                    </Box>\r\n\r\n                    {/* follow /  unfollow*/}\r\n                    <Box className={classes.button}>\r\n                        {user.followed\r\n                        ?\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {unfollowThunk(user.id) }}>    \r\n                            Отписаться\r\n                        </button>\r\n                        :\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {followThunk(user.id) }}>\r\n                            Подписаться\r\n                        </button>\r\n                        }\r\n                    </Box>\r\n            </Box>\r\n        </Box>\r\n}\r\nexport default User;\r\n\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUsersFilter } from \"../../../redux/users-selectors\";\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nav: {\r\n    backgroundColor: theme.palette.background.header,\r\n    boxShadow: theme.palette.boxShadow,\r\n    padding: \"10px\",\r\n    borderRadius: \"20px\",\r\n    marginBottom: \"15px\",\r\n    fontSize: \"1.2em\",\r\n\r\n    \"& > a\": {\r\n      color: \"#B3B3B3\",\r\n      textDecoration: \"none\",\r\n      fontFamily: \"Arial\",\r\n    },\r\n    \"& > a:hover\": {\r\n      display: \"block\",\r\n      backgroundColor: theme.palette.background.button,\r\n      color: \"white\",\r\n      borderRadius: \"10px\",\r\n    },\r\n   \r\n\r\n    // >>>>>\r\n    \"& * select\": {\r\n        color: \"#B3B3B3\",\r\n        border: 'none',\r\n        borderRadius: \"15px\",\r\n        width: '165px',\r\n    },\r\n\r\n    \"& * option\": {\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        backgroundColor: theme.palette.background.header,\r\n        padding: '15px',\r\n        fontSize: \"1.2em\",\r\n        color: \"#B3B3B3\",\r\n    },\r\n    \r\n    \"& * option:hover\": {\r\n        backgroundColor: theme.palette.background.button,\r\n        color: \"white\",\r\n    },\r\n    \"& > button\": {\r\n        border: 'none',\r\n        backgroundColor: theme.palette.background.header,\r\n    },\r\n  },\r\n  item: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    cursor: \"pointer\",\r\n\r\n    \"& > svg\": {\r\n      marginRight: \"12px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserNavbar = (props) => {\r\n  const classes = useStyles();\r\n  const filter = useSelector(getUsersFilter);\r\n\r\n  // Валидация\r\n  const usersSearchFormValidate = (values) => {\r\n    const errors = {};\r\n    return errors;\r\n  };\r\n\r\n  // Настройка кнопки\r\n  const submit = (values, setSubmitting) => {\r\n    props.onFilterChenged(values);\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{ term: filter.term, friend: filter.friend }}\r\n        validate={usersSearchFormValidate}\r\n        onSubmit={submit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Box className={classes.nav}>\r\n              {/* <button type=\"submit\">\r\n                <NavLink to=\"/users?term=&friend=true\">\r\n                  <Box className={classes.item}>Мои друзья</Box>\r\n                </NavLink>\r\n              </button>\r\n\r\n              <NavLink to=\"/users\">\r\n                <Box className={classes.item}>Поиск друзей</Box>\r\n              </NavLink> */}\r\n              <button>\r\n                <Field name=\"friend\" as=\"select\" size=\"1\" multiple={true}>\r\n                  <option value=\"true\">Мои друзья</option>\r\n                </Field>\r\n              </button>\r\n              <button>\r\n                <Field name=\"friend\" as=\"select\" size=\"1\" multiple={true}>\r\n                  <option value=\"false\">Поиск друзей</option>\r\n                </Field>\r\n              </button>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserNavbar;\r\n","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { FilterType } from \"../../../redux/user-reducer\"\r\nimport { getUsersFilter } from '../../../redux/users-selectors';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box, Grid } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\ntype Theme = {\r\n    palette : any\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\nSearchText:{\r\n    boxShadow: theme.palette.boxShadowSearch,\r\n    borderRadius: \"20px\",\r\n\r\n    '& > * input': {\r\n        color: theme.palette.text.search,\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: '100%',\r\n        paddingLeft: '15px',\r\n        margin: '1px 0px 0px 0px',\r\n        lineHeight: '220%',\r\n        fontSize: '1em',\r\n        boxSizing: 'border-box',\r\n        border: 'none',\r\n        borderRadius: '20px',\r\n        resize: 'none',\r\n        outline: 'none',\r\n    },\r\n    '& > * button':{\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.search,\r\n        border: 'none',\r\n        width: '100%',\r\n        height: '100%',\r\n        cursor: 'pointer',\r\n        borderRadius: '20px',\r\n    }\r\n    \r\n},\r\n\r\nusersNuvbar:{\r\n    '& > button':{\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        overflow: 'hidden',\r\n        border: 'none',\r\n        backgroundColor: 'black',\r\n\r\n    },\r\n    '& > button ::selection':{\r\n        backgroundColor: 'red'\r\n    },\r\n    '& > * select':{\r\n        backgroundColor: 'black',\r\n        padding: '20px',\r\n        margin: '-5px -25px -5px -5px',\r\n        color: 'green',\r\n        cursor: 'pointer',\r\n        outline: 'none',\r\n        border: 'none',\r\n    },\r\n    '& > * select ::selection':{\r\n        backgroundColor: 'red'\r\n    },\r\n    '& > * option':{\r\n        color: 'green',\r\n        backgroundColor: 'black',\r\n        outline: 'none',\r\n        border: 'none',\r\n    },\r\n    '& > * option ::selection':{\r\n        backgroundColor: 'red'\r\n    },\r\n}\r\n\r\n}));\r\n\r\n\r\n// Валидация\r\nconst usersSearchFormValidate = (values:any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChenged: (filter:FilterType) => void\r\n}\r\n\r\n// Поисковик на странице пользователей\r\nconst UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\nconst classes = useStyles();   \r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    // Настройка кнопки\r\n    const submit = (values:FilterType, {setSubmitting}: {setSubmitting:(isSubmitting:boolean) => void}) => {\r\n        props.onFilterChenged(values)\r\n        setSubmitting(false)\r\n    }\r\n  \r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term, friend: filter.friend  }}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n       {({ isSubmitting }) => (\r\n            <Form>\r\n                <Grid container className={classes.SearchText}>\r\n                    <Grid item xs={11}>\r\n                        <Box><Field type=\"text\" name=\"term\" placeholder=\"Поиск...\" autocomplete=\"off\"/></Box>   \r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            <SearchIcon />\r\n                        </button>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* <button>\r\n                    <Field name=\"friend\" as=\"select\" multiple={true}>\r\n                        // {/* <option value=\"null\">All</option> */}\r\n                        {/* <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option> */}\r\n                    {/* </Field> */}\r\n                {/* </button>   */}\r\n                {/* <Box className={classes.usersNuvbar}>\r\n                    <button >\r\n                        <Field name=\"friend\" as=\"select\" size=\"1\" multiple={true}>\r\n                            <option value=\"true\">Мои друзья</option>\r\n                        </Field> \r\n                    </button>\r\n                    <button >\r\n                        <Field name=\"friend\" as=\"select\" size=\"1\" multiple={true}>\r\n                            <option value=\"false\">Поиск друзей</option>\r\n                        </Field> \r\n                    </button>\r\n                </Box> */}\r\n            </Form>\r\n         \r\n       )}\r\n     </Formik>\r\n    </div>\r\n})\r\nexport default UsersSearchForm\r\n","import { FC, useEffect } from \"react\";\r\nimport User from \"./User\";\r\nimport s from \"./Users.module.css\";\r\nimport UserNavbar from \"./UserNavbar/UserNavbar\";\r\nimport UsersSearchForm from \"./UsersSearchForm/UsersSearchForm\";\r\nimport {\r\n  FilterType,\r\n  followThunk,\r\n  getUsers,\r\n  unfollowThunk,\r\n} from \"../../redux/user-reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getPageSize,\r\n  getUsersFilter,\r\n  SelectorUsers,\r\n} from \"../../redux/users-selectors\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ntype Theme = {\r\n  palette: any;\r\n};\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  userContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: '90vh',\r\n    overflow: \"auto\",\r\n\r\n    boxShadow: theme.palette.boxShadow,\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight: \"2%\",\r\n    borderRadius: \"20px\",\r\n  },\r\n}));\r\n\r\nexport const Users: FC = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const users = useSelector(SelectorUsers);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const pageSize = useSelector(getPageSize);\r\n  const filter = useSelector(getUsersFilter);\r\n  const followingInProgress = useSelector(getFollowingInProgress);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const queryString = require(\"query-string\");\r\n    const parsed = queryString.parse(location.search) as {\r\n      term: string;\r\n      page: string;\r\n      friend: string;\r\n    };\r\n    let actualPage = currentPage;\r\n    let actualFilter = filter;\r\n\r\n    if (!!parsed.page) actualPage = Number(parsed.page);\r\n\r\n    if (!!parsed.term)\r\n      actualFilter = { ...actualFilter, term: parsed.term as string };\r\n    if (!!parsed.friend)\r\n      actualFilter = {\r\n        ...actualFilter,\r\n        friend:\r\n          parsed.friend === \"null\"\r\n            ? null\r\n            : parsed.friend === \"true\"\r\n            ? true\r\n            : false,\r\n      };\r\n\r\n    dispatch(getUsers(actualPage, pageSize, actualFilter));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const query: any = {};\r\n    if (!!filter.term) query.term = filter.term;\r\n    if (filter.friend !== null) query.friend = String(filter.friend);\r\n\r\n    history.push({\r\n      pathname: \"/users\",\r\n      search: `?term=${filter.term}&friend=${filter.friend}`,\r\n    });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter]);\r\n  // Обработчик события Фильтр\r\n  const onFilterChenged = (filter: FilterType) => {\r\n    dispatch(getUsers(1, pageSize, filter));\r\n  };\r\n\r\n  const followw = (userId: number) => {\r\n    dispatch(followThunk(userId));\r\n  };\r\n  const unfolloww = (userId: number) => {\r\n    dispatch(unfollowThunk(userId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Список пользователей */}\r\n      <Grid container>\r\n        <Grid item xs={8.7} className={classes.userContainer}>\r\n            <UsersSearchForm onFilterChenged={onFilterChenged} />\r\n          {users.map((u) => (\r\n            <User\r\n              user={u}\r\n              followingInProgress={followingInProgress}\r\n              key={u.id}\r\n              unfollowThunk={unfolloww}\r\n              followThunk={followw}\r\n            />\r\n          ))}\r\n        </Grid>\r\n\r\n        <Grid item xs={3} className={s.UserNavbar}>\r\n          <UserNavbar onFilterChenged={onFilterChenged} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { Users } from './Users';\r\nimport { getIsAuth } from '../../redux/users-selectors';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const UsersPage: React.FC = () => {\r\n\r\n    const isAuth = useSelector(getIsAuth)\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={\"/login\"} />;\r\n    }\r\n    return <>\r\n        <Users />\r\n    </>\r\n}\r\n","export type FieldValidatorType = (value:string) => string | undefined \r\n\r\nexport const required:FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number):FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","/* eslint-disable jsx-a11y/alt-text */\r\nimport { createField, Input } from \"../Common/FormsControls/FormsControls\";\r\nimport { required } from \"../utils/validators/validators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { TGlobalState } from \"../../redux/reduxStore\";\r\nimport { FC } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Box } from \"@mui/material\";\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype Theme = {\r\n    palette : any\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    SearchText:{\r\n        boxShadow: theme.palette.boxShadowSearch,\r\n        borderRadius: \"20px\",\r\n\r\n        '& > * input': {\r\n            color: theme.palette.text.search,\r\n            backgroundColor: theme.palette.background.paper,\r\n            width: '100%',\r\n            paddingLeft: '15px',\r\n            margin: '1px 0px 0px 0px',\r\n            lineHeight: '220%',\r\n            fontSize: '1em',\r\n            boxSizing: 'border-box',\r\n            border: 'none',\r\n            borderRadius: '20px',\r\n            resize: 'none',\r\n            outline: 'none',\r\n        },\r\n        '& > * button':{\r\n            backgroundColor: theme.palette.background.paper,\r\n            color: theme.palette.text.search,\r\n            border: 'none',\r\n            width: '100%',\r\n            height: '100%',\r\n            cursor: 'pointer',\r\n            borderRadius: '20px',\r\n        }\r\n        \r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '340px',\r\n    },\r\n    LoginForm:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: theme.palette.background.header,\r\n        borderRadius: '20px',\r\n        boxShadow: '0px 0px 2px wheat',\r\n        padding: '27px',\r\n\r\n        '& button':{\r\n            width: '100%',\r\n            height: '30px',\r\n            paddingBottom: '3px',\r\n            backgroundColor: theme.palette.background.button,\r\n            color: 'white',\r\n            borderRadius: '7px',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n        },\r\n        \r\n        '& img':{\r\n            width: '100%',\r\n        },\r\n        '& input':{\r\n            width: '270px',\r\n            height: '35px',\r\n            marginBottom: '15px',\r\n            paddingLeft: '10px',\r\n            outline:'none',\r\n        }\r\n    },\r\n    formError:{\r\n        color: 'red',\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\r\nconst classes = useStyles();   \r\n \r\n  return (<Box className={classes.container}>\r\n      <Box className={classes.LoginForm}>\r\n        <form onSubmit={handleSubmit}>\r\n            <Box>{createField(\"Email\",\"email\",[required], Input)}</Box>\r\n            <Box>{createField(\"Password\",\"password\",[required], Input, {type: \"password\"})}</Box>\r\n        \r\n            {captchaUrl && <img src={captchaUrl} /> }\r\n            {captchaUrl && createField(\"Symbols from inage\",\"captcha\",[required], Input, {}) }\r\n            {error && <Box className={classes.formError}>{error}</Box>}\r\n            <button>Войти</button>\r\n        </form>\r\n    </Box>\r\n  </Box>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType,LoginFormOwnProps>({ form: \"login\" })(LoginForm)\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: null\r\n}\r\n\r\nexport const LoginPage: FC = () => {\r\n    const captchaUrl = useSelector((state:TGlobalState) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state:TGlobalState) => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n  const onSubmit = (formData:LoginFormValuesType) => {\r\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return <>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    <div>\r\n        Для Входа... <br />\r\n        email: slavae222@gmail.com <br />\r\n        password: aaaxiixaaa <br />\r\n        Регистрация нового пользователя проходит на другом сайте :<br />\r\n        https://social-network.samuraijs.com/ <br /><br /><br />\r\n        У форма есть проверка на ввод данных<br />\r\n        А также если ввести не правильно 5 раз данные отобразит капчу.\r\n    </div>  \r\n  </>\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Switch } from \"@mui/material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { ColorModeContext } from \"../../../../MyApp\";\r\n\r\nexport const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: \"translateX(6px)\",\r\n    \"&.Mui-checked\": {\r\n      color: \"#fff\",\r\n      transform: \"translateX(22px)\",\r\n      \"& .MuiSwitch-thumb:before\": {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          \"#fff\"\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      \"& + .MuiSwitch-track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n    width: 32,\r\n    height: 32,\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\",\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        \"#fff\"\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n\r\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\nexport default function ThemeSwitch() {\r\n  const colorMode = React.useContext(ColorModeContext);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          sell: \"N\",\r\n        }}\r\n        onSubmit={async (values) => {\r\n          await sleep(1000);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }}\r\n      >\r\n        {({ isSubmitting, values, setFieldValue }) => (\r\n          <Form>\r\n            <MaterialUISwitch\r\n              onClick={colorMode.toggleColorMode}\r\n              name=\"sell\"\r\n              value=\"Y\"\r\n              checked={values.sell === \"Y\"}\r\n              onChange={(event, checked) => {\r\n                setFieldValue(\"sell\", checked ? \"Y\" : \"N\");\r\n              }}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import { alpha, styled } from '@mui/material/styles';\r\nimport { pink } from '@mui/material/colors';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nexport const GreenSwitch = styled(Switch)(({ theme }) => ({\r\n    '& .MuiSwitch-switchBase.Mui-checked': {\r\n      color: pink[600],\r\n      '&:hover': {\r\n        backgroundColor: alpha(pink[600], theme.palette.action.hoverOpacity),\r\n      },\r\n    },\r\n    '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\r\n      backgroundColor: pink[600],\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        backgroundColor: 'red',\r\n    }\r\n  }));","import { Component } from \"react\";\r\n\r\n// ClockClass \r\nexport default class Time extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let options = {hour: 'numeric', minute: 'numeric'};\r\n      this.state = {\r\n        time: new Date().toLocaleString('de-DE',options)\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.intervalID = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n      clearInterval(this.intervalID);\r\n    }\r\n    tick() {\r\n      let options = {hour: 'numeric', minute: 'numeric'};\r\n  \r\n      this.setState({\r\n        time: new Date().toLocaleString('de-DE',options),\r\n      });\r\n    }\r\n    render() {\r\n      return <div> {this.state.time}</div>;\r\n    }\r\n  }\r\n  ","import { Form, Formik } from \"formik\";\r\nimport { GreenSwitch } from \"./GreenSwitch\";\r\nimport Time from \"./Time\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback, useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sss: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: \"lighter\",\r\n    fontFamily: \"Open Sans\",\r\n    position: \"fixed\",\r\n    top: \"80%\",\r\n    left: \"3%\",\r\n    userSelect: \"none\",\r\n    fontSize: \"5em\",\r\n\r\n    [theme.breakpoints.between(\"xs\",\"sm\")]: {\r\n      fontSize: \"1em\",\r\n    },\r\n    [theme.breakpoints.between(\"sm\",\"md\")]: {\r\n      fontSize: \"2em\",\r\n    },\r\n    [theme.breakpoints.between(\"md\",\"lg\")]: {\r\n      fontSize: \"4em\",\r\n    },\r\n    [theme.breakpoints.between(\"lg\",\"xl\")]: {\r\n      fontSize: \"5em\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function TimeSwitch() {\r\n  const dispatch = useDispatch();\r\n\r\n  const isTime = useSelector((state) => state.time.isTime);\r\n\r\n  \r\n  useEffect(() => {\r\n    const localStorageRef = localStorage.getItem(\"Time\")\r\n    dispatch({ type: \"UPDATE_TIME\", payload: JSON.parse(localStorageRef) });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Time\", JSON.stringify(isTime));\r\n  }, [isTime]);\r\n\r\n  const label = { inputProps: { \"aria-label\": \"Switch demo\" } };\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const newLocal = useCallback;\r\n  const showTime = newLocal(() =>\r\n    dispatch({ type: \"UPDATE_TIME\", payload: !isTime })\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          sell: \"N\",\r\n        }}\r\n        onSubmit={async (values) => {\r\n          await sleep(1000);\r\n          alert(JSON.stringify(values, null, 2));\r\n        }}\r\n      >\r\n        {({ isSubmitting, values, setFieldValue }) => (\r\n          <Form>\r\n            <GreenSwitch\r\n              {...label}\r\n              defaultChecked\r\n              onClick={showTime}\r\n              name=\"sell\"\r\n              value=\"Y\"\r\n              checked={values.sell === \"Y\"}\r\n              onChange={(event, checked) => {\r\n                setFieldValue(\"sell\", checked ? \"Y\" : \"N\");\r\n              }}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const Clock = () => {\r\n  const classes = useStyles();\r\n  const isTime = useSelector((state) => state.time.isTime);\r\n\r\n  return (\r\n    <>\r\n      {isTime ? (\r\n        <Box className={classes.sss}>\r\n          <Time />\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getIsAuth } from \"../../../../redux/users-selectors\";\r\nimport { logout } from \"../../../../redux/auth-reducer\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    \"& > button\": {\r\n      backgroundColor: theme.palette.background.button,\r\n      boxShadow: theme.palette.boxShadow,\r\n      color: theme.palette.text.paper,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      border: 0,\r\n      fontSize: \"14px\",\r\n      padding: \"10px\",\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ExitButton = () => {\r\n  const classes = useStyles();\r\n  const isAuth = useSelector(getIsAuth);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Box className={classes.button}>\r\n      {isAuth ? (\r\n        <button onClick={() => dispatch(logout())}>\r\n          Выйти\r\n          <PowerSettingsNewIcon />{\" \"}\r\n        </button>\r\n      ) : (\r\n        <NavLink to={\"/login\"}>Войти</NavLink>\r\n      )}\r\n      {/* onClick={props.logout} */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExitButton;\r\n","import { Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ThemeSwitch from \"./settingsComponent/ThemeSwitch/ThemeSwitch\";\r\nimport { TimeSwitch } from \"./settingsComponent/TimeSwitch/TimeSwitch\";\r\nimport ExitButton from \"./settingsComponent/ExitButton/ExitButton\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsAuth } from \"../../redux/users-selectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  settingsContainer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.palette.boxShadow,\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n    borderRadius: \"20px\",\r\n  },\r\n}));\r\n\r\nconst Setings = (props) => {\r\n  const classes = useStyles();\r\n  const isAuth = useSelector(getIsAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container className={classes.settingsContainer}>\r\n        <ThemeSwitch />\r\n        <TimeSwitch />\r\n        <ExitButton />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setings;\r\n","import React, { Component, Suspense } from \"react\"\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\"\r\nimport \"./App.css\"\r\nimport Navbar from \"./commponents/Navbar/Navbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { initializeApp } from \"./redux/app-reducer\"\r\nimport { compose } from \"redux\"\r\n\r\nimport Preloader from \"./commponents/Common/Preloader/Preloader\"\r\nimport HeaderContainer from \"./commponents/Header/HeaderContainer\"\r\nimport { UsersPage } from \"./commponents/Users/UsersContainer\"\r\nimport { LoginPage } from \"./commponents/Login/Login\"\r\nimport { Grid } from \"@mui/material\"\r\nimport Setings from \"./commponents/Setings/Setings\"\r\nimport { Clock } from \"./commponents/Setings/settingsComponent/TimeSwitch/TimeSwitch\"\r\n\r\n\r\nconst  DialogsContainer = React.lazy(() => import('./commponents/Dialogs/DialogsContainer'))\r\nconst  ProfileContainer = React.lazy(() => import('./commponents/Profile/ProfileContainer'))\r\nconst  ChatPage = React.lazy(() => import('./pages/chat/ChatPage'))\r\nconst  NewsContainer = React.lazy(() => import('./pages/News/NewsContainer'))\r\nconst  SchoolContainer = React.lazy(() => import('./pages/School/SchoolContainer'))\r\n\r\nconst  PageHTML1 = React.lazy(() => import('./pages/School/schoolPages/pages/pageHTML/PageHTML1'))\r\nconst  PageHTML2 = React.lazy(() => import('./pages/School/schoolPages/pages/pageHTML/PageHTML2'))\r\nconst  PageHTML3 = React.lazy(() => import('./pages/School/schoolPages/pages/pageHTML/PageHTML3'))\r\n\r\nconst  PageCSS1 = React.lazy(() => import('./pages/School/schoolPages/pages/paheCSS/PageCSS1'))\r\nconst  PageCSS2 = React.lazy(() => import('./pages/School/schoolPages/pages/paheCSS/PageCSS2'))\r\nconst  PageCSS3 = React.lazy(() => import('./pages/School/schoolPages/pages/paheCSS/PageCSS3'))\r\n\r\nconst  PageJs1 = React.lazy(() => import('./pages/School/schoolPages/pages/pageJS/PageJs1'))\r\nconst  PageJs2 = React.lazy(() => import('./pages/School/schoolPages/pages/pageJS/PageJs2'))\r\nconst  PageJs3 = React.lazy(() => import('./pages/School/schoolPages/pages/pageJS/PageJs3'))\r\n\r\nclass App extends Component {\r\n    // Все необработаные ошибки в помисах\r\n    catcAllUnhandledErrors = (reason, promise) => {\r\n        alert(\"Some error\");\r\n    }\r\n\r\n    // инициалтзируем приложение\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        // Side Effect код выходящий за рамки react, подписались на глобальное событие \r\n        window.addEventListener(\"unhandledrejection\", this.catcAllUnhandledErrors);\r\n    }\r\n    // Если компаниа вдруг начнёт умирать, ном обязательно нужно сделать отписку\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"unhandledrejection\", this.catcAllUnhandledErrors);\r\n    }\r\n\r\n    render(){\r\n        // Показываем Preloader пока наше приложение инициализируется\r\n        if (!this.props.initialized){\r\n        return <Preloader />\r\n        }\r\n        return (\r\n            <Grid container className=\"app-wrapper\" >\r\n                <Grid container xs={10} style={{maxWidth: '1000px'}} >\r\n                    <Grid item xs={12}>\r\n                        <HeaderContainer />\r\n                    </Grid>\r\n                    <Grid item xs={12} container  spacing={2}>\r\n                        <Grid item xs={2.5}>\r\n                            <Navbar />\r\n  <Clock />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={9.5}>\r\n                            <Suspense fallback={<div>Загрузка...</div>}> \r\n                                <section className=\"app-wrapper-content\">\r\n                                    <Switch >\r\n                                        <Redirect exact from=\"/\" to=\"/profile\" />\r\n                                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />}/>   \r\n                                        <Route path=\"/school\" render={() => <SchoolContainer />}/>\r\n                                        \r\n                                        <Route path=\"/html/1\" render={() => <PageHTML1 />}/>\r\n                                        <Route path=\"/html/2\" render={() => <PageHTML2 />}/>\r\n                                        <Route path=\"/html/3\" render={() => <PageHTML3 />}/>\r\n                                     \r\n                                        <Route path=\"/css/1\" render={() => <PageCSS1 />}/>\r\n                                        <Route path=\"/css/2\" render={() => <PageCSS2 />}/>\r\n                                        <Route path=\"/css/3\" render={() => <PageCSS3 />}/>\r\n                                        \r\n                                        <Route path=\"/Js/1\" render={() => <PageJs1 />}/>\r\n                                        <Route path=\"/Js/2\" render={() => <PageJs2 />}/>\r\n                                        <Route path=\"/Js/3\" render={() => <PageJs3 />}/>  \r\n\r\n\r\n                                        <Route path=\"/dialogs\" render={() => <DialogsContainer />}/>\r\n                                        <Route path=\"/users\"   render={() => <UsersPage pageTitle={\"friends\"} />} />\r\n                                        <Route path=\"/login\"   render={() => <LoginPage />} />\r\n                                        <Route path=\"/chat\"    render={() => <ChatPage />} />\r\n                                        <Route path=\"/news\"    render={() => <NewsContainer />} />\r\n                                        <Route path=\"/settings\"render={() => <Setings />} />\r\n                                        <Route path=\"*\"        render={() =>  <div>404 NOTE FOUND</div>}/>\r\n                                    </Switch>\r\n                                </section>\r\n                            </Suspense>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\nwithRouter,\r\nconnect(mapStateToProps, {initializeApp}))(App);","import * as React from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport App from './App';\r\nimport { createStyles, makeStyles } from '@mui/styles';\r\n\r\nexport const ColorModeContext = React.createContext({ toggleColorMode: () => {} });\r\n\r\n\r\nexport default function MyApp() {\r\n    const [mode, setMode] = React.useState('light');\r\n\r\n    const colorMode = React.useMemo(\r\n        () => ({\r\n        toggleColorMode: () => {\r\n            setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n        },\r\n        }),\r\n        [],\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        const localStorageRef = localStorage.getItem('Theme');\r\n        setMode(JSON.parse(localStorageRef))    \r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem('Theme', JSON.stringify(mode))\r\n    }, [mode]);\r\n\r\n \r\nconst theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          \t...(mode==='dark'&&{\r\n          background:{\r\n            header: '#1F1F1F',\r\n            default: '#0a0a0a',\r\n            paper: '#1f1f1f',\r\n            button: '#3d3d3d',\r\n            buttonEnd: '#D82148',\r\n            buttonHover: '#444445',\r\n            backgroundHover: '#444445',\r\n            blockCode:'repeating-linear-gradient(to bottom, transparent, transparent 10px, #323232 10px, #323232 11px),repeating-linear-gradient(to right, transparent, transparent 10px, #323232 10px, #323232 11px)',\r\n          \r\n        },\r\n          boxShadow: '0px 0px 2px wheat',\r\n          boxShadowSearch: '0px -7px 15px -9px wheat',\r\n          borderBottom: '1px dashed #D82148', \r\n          borderLeft: '2px solid #323232',\r\n          borderRight: '1px dashed #cdcdcd',\t\r\n\r\n        }),\r\n        ...(mode === 'light' && {\r\n          background: {\r\n            // header: '#247881',\r\n            header: '#485460',\r\n            default: '#FFD124',\r\n            paper: '#DFDFDE',\r\n            button: '#D82148',\r\n            buttonEnd: '#3d3d3d',\r\n            buttonHover: '#ff0036',\r\n            backgroundHover: '#b2b2b2',\r\n            blockCode:'repeating-linear-gradient(to bottom, transparent, transparent 10px, #cccccc 10px, #cccccc 11px),repeating-linear-gradient(to right, transparent, transparent 10px, #cccccc 10px, #cccccc 11px)',  \r\n        },\r\n          boxShadow: '0px 0px 2px #485460',\r\n          boxShadowSearch: '0px -7px 10px -9px #FD5D5D',\r\n          borderBottom: '1px dashed #2B2B2B', \r\n          borderLeft: '2px solid #cccccc',\r\n          borderRight: '1px dashed #ff9f80',\t\r\n        }),\r\n        // ...(mode === 'color' && {\r\n        //   background: {\r\n        //     header: '#FFD93D',\r\n        //     default: '#FFD124',\r\n        //     paper: '#05595B',\r\n        //     button: '#D82148'\r\n        //   },\r\n        //   boxShadow: '0px 0px 2px #F5F5F5',\r\n        //   borderBottom: '1px solid #2B2B2B',  \t\r\n        // }),\r\n\r\n        text:{\r\n          ...(mode === 'light' && {\r\n            primary: 'black',\r\n            secondary: 'white',\r\n            paper: '#ffffff',\r\n            hover: 'white',\r\n            auxiliary: 'black',\r\n            school: '#535353',\r\n            ol: '#282828',\r\n            tegMain: '#804000',\r\n            tegSupport: '#ad300e',\r\n          }),\r\n          ...(mode==='dark'&&{\r\n            primary: 'white',\r\n            secondary: 'black',\r\n            paper: '#ffffff',\r\n            hover: 'white',\r\n            auxiliary: '#C69B7B',\r\n            search: 'wheat',\r\n            school: '#cccccc',\r\n            ol: '#da9f65',\r\n            tegMain: '#14b4b4',\r\n            tegSupport: '#FFD93D',\r\n\r\n          }),\r\n          // ...(mode==='color'&&{\r\n          //   primary: 'white',\r\n          //   secondary: 'black',\r\n          //   paper: '#ffffff',\r\n          //   hover: 'white',\r\n          //   auxiliary: 'red'\r\n          // }),\r\n        },\r\n\t\t\t\r\n}\r\n    }),\r\n    [mode],\r\n  );\r\n\r\n\r\n//  Темизация body\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    '@global': {\r\n      body: {\r\n      ...(mode==='dark'&&{\r\n          background:'#0a0a0a',\r\n          color: 'white',\r\n      }),\r\n      ...(mode==='light'&&{\r\n        background:'#F5F5F5',\r\n        color: 'black',\r\n      }),\r\n      // ...(mode==='cplor'&&{\r\n      //   background:'#062C30',\r\n      // }),  \r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nreturn (\r\n  <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n        <GlobalStyles />\r\n      </ThemeProvider>\r\n  </ColorModeContext.Provider>\r\n);\r\n}","import reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/reduxStore\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport MyApp from \"./MyApp\";\r\n\r\n// const ColorModeContext = React.createContext({ toggleColorMode: () => {} });\r\n\r\n\r\nReactDOM.render(\r\n// StrictMode — инструмент для обнаружения потенциальных проблем в приложении.\r\n// Строгий режим активирует дополнительные проверки и предупреждения для своих потомков.\r\n  <React.StrictMode>\r\n      {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\r\n    <HashRouter >\r\n{/* Provider - выступает в роле проводника, в качестве аргумента мы передаём созданный нами store, теперь этот store будет доступен в child компонетнте App */}\r\n      <Provider store={store}>\r\n        <MyApp />\r\n      </Provider>\r\n    </HashRouter>\r\n    {/* </BrowserRouter> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n//reportWebVitals(console. log); Эта функция запускается, когда окончательные значения для любого из показателей завершили вычисление на странице. Вы можете использовать его для записи любых результатов на консоль или для отправки на конкретную конечную точку.\r\nreportWebVitals();\r\n","import { GetItemsType, instance, ResponseType } from \"./api\";\r\n\r\n//  Users\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 100, term:string = '', friend: null | boolean = null ) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n        .then(res => res.data)\r\n    },\r\n\r\n    async getFriends() {\r\n        const response = await instance.get<TResponseUsers>(`users?count=100&friend=true`)\r\n        return response.data\r\n    },\r\n    async searchUser(value: string) {\r\n        const response = await instance.get<TResponseUsers>(`users?term=${value}`)\r\n        return response.data\r\n    },\r\n\r\n    follow      (userId:number) {return instance.post  <ResponseType>(`follow/${userId}`).then(res => res.data)},\r\n    unfollow    (userId:number) {return instance.delete(`follow/${userId} `).then(res => res.data) as Promise<ResponseType>},\r\n};\r\n\r\ntype TResponseUsers = {\r\n    items: TUser[]\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype TUser = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos:{\r\n        small: string\r\n        large: string\r\n    }\r\n    followed: boolean\r\n}","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n    \r\n}","import { Dispatch } from \"redux\";\r\nimport { updateObjectInArray } from \"../commponents/utils/object-helpers\";\r\nimport { UserType } from \"../type/types\";\r\nimport { BaseThunkType, TReturnActionType } from \"./reduxStore\";\r\nimport { usersAPI } from '../api/users-api';\r\n\r\n// state\r\nlet initialState = {\r\n    users: [] as Array<UserType>,   // Массив пользователей\r\n    pageSize: 100, \t\t   \t       // Размер выдаваемых пользователей на 1 страницу\r\n    totalUsersCount: 0, \t\t  // Общее количество пользователей\r\n    currentPage: 1, \t   \t     // Устанавливаем страницу по умолчанию 1 \r\n    isFetching: true,    \t    // preloader~\r\n    followingInProgress: [] as number[], // 1 подписан 0 не подписан \r\n    filter: {\r\n        term : '',\r\n        friend: null as null | boolean  \r\n    }    \r\n}\r\n\r\n//Action приходит в store всего один, а дальше раскидывается по reducer, заходя в reduser если action не применялся в case, reducer возвращает не изменёную разметку \r\n//reduser это чистая функция которая принимает state,action и если нужно применяет этот action к state и возвращает новый state, либо возвращает не изменёный state если action не подошёл\r\n//Следом после изменения всех reducer, возвращается новый актуальный state\r\nconst userReducer = (state = initialState, action:ActionsType):InitialState => {\r\n\tswitch (action.type) {\r\n\r\n\t\t//Подписаться\r\n\t\tcase 'SN/USERS/FOLLOW':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n\t\t}\r\n\t\t//Отписаться\r\n\t\tcase 'SN/USERS/UNFOLLOW':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n\t\t}\r\n\r\n\t\t//Инициализировать пользователей\r\n\t\tcase 'SN/USERS/SET_USERS': {return { ...state, users:action.users }}\r\n\r\n\t\t//установить текущую страницу\r\n\t\tcase 'SN/USERS/SET_CURRENT_PAGE': {return { ...state, currentPage: action.currentPage}}\r\n\t\t\r\n        // Фильтр\r\n        case 'SN/USERS/SET_FILTER': {return { ...state, filter: action.payload }}\r\n\r\n\t\t//установить общее количество пользоватлей\r\n\t\tcase 'SN/USERS/SET_TOTAL_USERS_COUNT': {return { ...state, totalUsersCount: action.count}}\r\n\r\n\t\t//Показывает preloader~\r\n\t\tcase 'SN/USERS/TOGGLE_IS_FETCHING': {return { ...state, isFetching: action.isFetching}}\r\n\r\n\t\t// Подписан или нет\r\n\t\tcase 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n\t\treturn { \r\n\t\t\t...state, \r\n\t\t\tfollowingInProgress: action.isFetching \r\n\t\t\t? [...state.followingInProgress, action.userId] \r\n\t\t\t: state.followingInProgress.filter(id => id !== action.userId)}\r\n\t\t}\r\n\r\n\t\t// В случае если не найдёт совпадений вернёт не изменёный state\r\n\t\tdefault:return state;\r\n\t}\r\n};\r\n\r\n//Экшены — это структуры, которые передают данные из приложения в store.\r\n// Они являются единственными источниками информации для store. Мы отправляете их в стор, используя метод store.dispatch().\r\n\r\n// Actions\r\nexport const actions = {\r\n    followSuccess      :     (userId:number)\t\t => ({ type: 'SN/USERS/FOLLOW', userId } as const),\r\n    unfollowSuccess    :     (userId:number)\t\t => ({ type: 'SN/USERS/UNFOLLOW', userId } as const),\r\n    setUsers \t\t   :     (users:Array<UserType>) => ({ type: 'SN/USERS/SET_USERS', users } as const),\r\n    setCurrentPage     :     (currentPage:number)    => ({ type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter          :     (filter: FilterType)    => ({ type: 'SN/USERS/SET_FILTER', payload:filter} as const),\r\n    setTotalUsersCount :     (totalCount:number)     => ({ type: 'SN/USERS/SET_TOTAL_USERS_COUNT', count:totalCount} as const),\r\n    toggleIsFetching   :     (isFetching:boolean)    => ({ type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingProgress: (isFetching:boolean, userId:number)=> ({ type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\r\n}\r\n// Thank - функция которая делает ассинхронную операцию и которая делает дисптчи \r\n// Получить пользователей\r\n// ThunkAction<void, RootState, unknown, AnyAction>\r\n// getUsers === requestUsers\r\nexport const getUsers  = (page:number,pageSize:number, filter: FilterType):ThunkType => { // Thank Creater \r\n\treturn async (dispatch) =>{                         // Thank - благодаря замыканиям в Thank Creater,\r\n\t\tdispatch(actions.toggleIsFetching(true));      // благодаря переданным параметрам в Thank Creater,\r\n\t\tdispatch(actions.setCurrentPage(page));       // Thank - работает как-то иначе\r\n\t\tdispatch(actions.setFilter(filter));           // Thank - работает как-то иначе\r\n\r\n\t\tlet data = await usersAPI.getUsers (page,pageSize,filter.term, filter.friend);\r\n\t\tdispatch(actions.toggleIsFetching(false));\r\n\t\tdispatch(actions.setUsers(data.items));\r\n\t\tdispatch(actions.setTotalUsersCount(data.totalCount));\r\n\t}\r\n}\r\n\r\n// Общая функция для подписки и отписки \r\nconst followUnfollowFlow = async (dispatch:DispatchType, userId:number, apiMethod:any, actionCreater: (userId: number) => ActionsType) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n        let data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreater(userId)); \r\n        }\r\n        dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\n// Подписаться\r\nexport const followThunk = (userId:number):ThunkType => {\r\n    return async (dispatch) =>{\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n }\r\n\r\n // Отписаться\r\nexport const unfollowThunk = (userId:number):ThunkType => {\r\n  return async (dispatch) =>{\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n\t}\r\n}\r\n\r\nexport default userReducer\r\n\r\ntype InitialState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = TReturnActionType<typeof actions>\r\ntype DispatchType = Dispatch<ActionsType>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n","import { Field } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const FormControl = ({input,meta: {touched,error}, children,}) => {\r\n    const hasError = touched && error;\r\n        return(\r\n            <div className={s.FormsControl + \" \" + (hasError ? s.error : \"\")} >\r\n                <div>{children} </div>\r\n                {/* Если этот элемент был тронут touched и meta.error то покажет спан*/}\r\n                { hasError && <span>{error}</span> }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}  /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \" \") => (\r\n    <div> \r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserElem\":\"Users_UserElem__3St74\",\"spisok\":\"Users_spisok__3VUXg\",\"selectedPage\":\"Users_selectedPage__qKl8j\",\"userPhoto\":\"Users_userPhoto__28V_K\",\"UserName\":\"Users_UserName__25-V2\"};"],"sourceRoot":""}